{"version":3,"sources":["./src/app/services/ip-guard.service.ts","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/ip-sector/ip-address/ip-address.component.ts","./src/app/ip-sector/ip-address/ip-address.component.html","./src/app/services/ip-service.service.ts","./src/app/casting-sector/casting/casting.component.ts","./src/app/casting-sector/casting/casting.component.html","./src/app/inscription-sector/inscription/inscription.component.ts","./src/app/inscription-sector/inscription/inscription.component.html","./src/app/quote-sector/quote-detail/quote-detail.component.ts","./src/app/quote-sector/quote-detail/quote-detail.component.html","./src/app/services/users.service.ts","./src/app/inscription-sector/inscription-profile/inscription-profile.component.ts","./src/app/inscription-sector/inscription-profile/inscription-profile.component.html","./src/app/quote-sector/quote/quote.component.ts","./src/app/quote-sector/quote/quote.component.html","./src/app/quote-sector/quote/dialog-overview-example-dialog.html","./src/environments/environment.ts","./src/app/installation-sector/installation/installation.component.ts","./src/app/installation-sector/installation/installation.component.html","./src/app/monument-sector/monument-profile/monument-profile.component.ts","./src/app/monument-sector/monument-profile/monument-profile.component.html","./src/app/services/monument.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/installation.service.ts","./src/app/inscriptionQuoteSector/inscription-quote/inscription-quote.component.ts","./src/app/inscriptionQuoteSector/inscription-quote/inscription-quote.component.html","./src/app/inscriptionQuoteSector/inscription-quote/dialog-overview-example-dialog.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/ip-sector/ip-profile/ip-profile.component.ts","./src/app/ip-sector/ip-profile/ip-profile.component.html","./src/app/inscriptionQuoteSector/inscription-quote-steper/inscription-quote-steper.component.ts","./src/app/inscriptionQuoteSector/inscription-quote-steper/inscription-quote-steper.component.html","./src/app/app.module.ts","./src/app/quote-sector/quote-stepper/quote-stepper.component.ts","./src/app/quote-sector/quote-stepper/quote-stepper.component.html","./src/app/casting-sector/casting-profile/casting-profile.component.ts","./src/app/casting-sector/casting-profile/casting-profile.component.html","./src/app/monument-sector/monument/monument.component.ts","./src/app/monument-sector/monument/monument.component.html","./src/app/foundation-sector/foundation/foundation.component.ts","./src/app/foundation-sector/foundation/foundation.component.html","./src/app/ip-sector/ip-register/ip-register.component.ts","./src/app/ip-sector/ip-register/ip-register.component.html","./src/app/quote-sector/quote-profile/quote-profile.component.ts","./src/app/quote-sector/quote-profile/quote-profile.component.html","./src/app/services/auth.service.ts","./src/app/services/additional-inscription-service.service.ts","./src/app/services/accessories.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/services/foundation.service.ts","./src/app/inscriptionQuoteSector/inscription-quote-detail/inscription-quote-detail.component.ts","./src/app/inscriptionQuoteSector/inscription-quote-detail/inscription-quote-detail.component.html","./src/app/additionalInscription-sector/additional-inscription-profile/additional-inscription-profile.component.ts","./src/app/additionalInscription-sector/additional-inscription-profile/additional-inscription-profile.component.html","./src/app/services/inscription.service.ts","./src/app/services/quote.service.ts","./src/app/accessories-sector/accessories-profile/accessories-profile.component.ts","./src/app/accessories-sector/accessories-profile/accessories-profile.component.html","./src/app/installation-sector/installation-profile/installation-profile.component.ts","./src/app/installation-sector/installation-profile/installation-profile.component.html","./src/app/notfound/nopermission/nopermission.component.ts","./src/app/notfound/nopermission/nopermission.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/inscription-quote.service.ts","./src/app/foundation-sector/foundation-profile/foundation-profile.component.ts","./src/app/foundation-sector/foundation-profile/foundation-profile.component.html","./src/app/services/casting.service.ts","./src/app/accessories-sector/accessories/accessories.component.ts","./src/app/accessories-sector/accessories/accessories.component.html","./src/app/additionalInscription-sector/additional-inscription/additional-inscription.component.ts","./src/app/additionalInscription-sector/additional-inscription/additional-inscription.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { IpServiceService } from './ip-service.service'; \nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpGuard implements CanActivate {\n  ip;\n  constructor(private router: Router,\n    private ipService: IpServiceService) { }\n\n  canActivate(){\n    return this.ipService.getIPAddress().pipe(map(res=>{ \n      let ipaddress =res['ip'];\n      if(ipaddress){\n        this.ipService.isIpPermission({ip:ipaddress}).subscribe(res=>{\n          //console.log(res['status'])\n          if(res['status'])\n            return res['status'];\n          else{\n            this.router.navigate(['/nopermission']);\n            return res['status'];\n          }\n        })\n      }\n      else return false; }\n    ))\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  roles: string[] = ['user', 'guide', 'lead-guide', 'admin'];\n  currentUser = {};\n  id;\n  editProfile = true;\n  resetPassword = false;\n  comfirmPassworError = false;\n\n  constructor(private usersService: UsersService,\n              private router: Router,\n              private route: ActivatedRoute) { \n\n      this.id = this.route.snapshot.paramMap.get('id');\n      if(this.id) {\n\n        this.usersService.getUser(this.id).subscribe(result=>{\n          this.currentUser =result['data']['user'];\n        });\n      }\n      else{\n        this.resetPassword = true;\n      }\n      let url = this.router.url;\n      if(url.split('/')[1] === \"resetpassword\"){\n        this.editProfile = false;\n        this.resetPassword = true;\n      }\n  }\n\n  ngOnInit() {\n  }\n  \n  //create user\n  save(newUser){\n    if(this.id) {\n      this.usersService.updateUser(this.id,newUser).subscribe(result=>{\n        this.router.navigate(['/userslist'])\n      });\n    }\n    else{\n      if(newUser.password === newUser.passwordConfirm){\n        this.comfirmPassworError = false;\n        this.usersService.createUser(newUser).subscribe(result=>{\n          this.router.navigate(['/userslist'])\n        });\n      }else{\n        this.comfirmPassworError = true;\n      }\n    }\n  }\n\n  deleteUser(){\n    if(confirm('Are you sure you want to delete this product?')){\n      console.log(\"works\")\n      this.usersService.deleteUser(this.id).subscribe(result=>{\n        this.router.navigate(['/userslist'])\n      });\n    }\n    return\n  }\n\n  changePassword(newPassword){\n    if(newPassword.password === newPassword.passwordConfirm){\n      this.comfirmPassworError = false;\n      this.usersService.resetPassword(this.id, newPassword).subscribe(result=>{\n        this.router.navigate(['/userslist'])\n      })\n    }else{\n      this.comfirmPassworError = true;\n    }\n    \n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\" *ngIf=\"editProfile\">Edit Profile</h4>\n                        <h4 class=\"card-title\" *ngIf=\"!editProfile\">Reset the Password</h4>\n                        <p class=\"card-category\">Complete your profile</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\" *ngIf=\"editProfile\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #userEmail=\"ngModel\" [(ngModel)]=\"currentUser.email\" name=\"email\" matInput placeholder=\"Email address\" type=\"email\" required email>\n                                    </mat-form-field>\n                                    \n                                    <mat-error *ngIf=\"userEmail.touched && userEmail.invalid && userEmail.errors.email\">\n                                        Please enter a valid email address\n                                      </mat-error>\n                                      <mat-error *ngIf=\"userEmail.touched && userEmail.invalid && userEmail.errors.required\">\n                                        Email is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentUser.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                      \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Role --</mat-label>\n                                          <mat-select [(ngModel)]=\"currentUser.role\" name=\"role\" required>\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let role of roles\" [value]=\"role\">\n                                              {{ role }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\" *ngIf=\"resetPassword\">\n                                <div class=\"col-md-8\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input #password=\"ngModel\" matInput ngModel name=\"password\" placeholder=\"Password\" type=\"password\" required>\n                                  </mat-form-field>\n                                  <mat-error *ngIf=\"password.touched && password.invalid && password.errors.required\">\n                                      Password is <strong>required</strong>\n                                  </mat-error>\n                                </div>\n                            </div>\n                            <div class=\"row\" *ngIf=\"resetPassword\">\n                                <div class=\"col-md-8\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input #comfirmPassword=\"ngModel\" matInput ngModel name=\"passwordConfirm\" placeholder=\"Comfirm Password\" type=\"password\" required>\n                                  </mat-form-field>\n                                  <mat-error *ngIf=\"comfirmPassworError\">\n                                      Passwords do not <strong>match</strong>\n                                  </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create User</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id && editProfile\" [disabled]=\"f.invalid\">Update Profile</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-danger pull-right\" *ngIf=\"id && resetPassword\" (click)=\"changePassword(f.value)\" [disabled]=\"f.invalid\">Reset Password</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id && editProfile\" (click)=\"deleteUser()\">Delete User</button>\n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"col-md-4\">\n                <div class=\"card card-profile\">\n                    <div class=\"card-avatar\">\n                        <a href=\"javascript:void(0)\">\n                            <img class=\"img\" src=\"./assets/img/faces/marc.jpg\" />\n                        </a>\n                    </div>\n                     <div class=\"card-body\">\n                        <h6 class=\"card-category text-gray\">CEO / Co-Founder</h6>\n                        <h4 class=\"card-title\">Alec Thompson</h4>\n                        <p class=\"card-description\">\n                            Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...\n                        </p>\n                        <a href=\"javascript:void(0)\" class=\"btn btn-danger btn-round\">Follow</a>\n                    </div> \n                </div>\n            </div> -->\n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport{ IpServiceService} from '../../services/ip-service.service';\n\n\nexport interface IpAddressData{\n  location:string;\n  ip:string;  \n};\n\n@Component({\n  selector: 'app-ip-address',\n  templateUrl: './ip-address.component.html',\n  styleUrls: ['./ip-address.component.css']\n})\nexport class IpAddressComponent implements OnInit {\n\n  displayedColumns: string[] = ['location', 'ip', 'edit'];\n  dataSource: MatTableDataSource<IpAddressData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private ipService: IpServiceService) {\n    this.ipService.getAllIpAddress().subscribe((result)=>{\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"ipAddresss\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">IP Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/ip-profile/']\">New IP</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input location and ip\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"location\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Location </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.location}} </td>\n                              </ng-container>\n                              <!-- Chinese Name Column -->\n                              <ng-container matColumnDef=\"ip\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> IP </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.ip}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/ip-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+ token, \"Content-Type\": \"application/json\" }),\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpServiceService {\n\n  constructor(private http:HttpClient) { }  \n\n  getIPAddress()  \n  {  \n    return this.http.get(\"https://jsonip.com\"); \n  }\n\n  isIpPermission(permissionData){\n    return this.http.post(\"/api/v1/ipAddress/ipPermision\", permissionData)\n  }\n\n  getAllIpAddress(){\n    return this.http.get(\"/api/v1/ipAddress/\", httpOptions);\n  }\n\n  getIpAddress(ipAddressId){\n    return this.http.get(\"/api/v1/ipAddress/\" + ipAddressId, httpOptions);\n  }\n\n  createIpAddress(newIpAddress){\n    return this.http.post(\"/api/v1/ipAddress/\", newIpAddress, httpOptions);\n  }\n\n  updateIpAddress(ipAddressId, newIpAddress){\n    return this.http.patch(\"/api/v1/ipAddress/\" + ipAddressId, newIpAddress, httpOptions)\n  }\n\n  deleteIpAddress(ipAddressId){\n    return this.http.delete(\"/api/v1/ipAddress/\" + ipAddressId, httpOptions)\n  }\n\n  getIpAddressByOther(params){\n    return this.http.get(\"/api/v1/ipAddress/\" + params, httpOptions )\n  }\n\n  registerIpAddress(newData){\n    return this.http.post(\"/api/v1/ipAddress/register\", newData);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { CastingService } from '../../services/casting.service';\n\nexport interface CastingData{\n  name: string;\n  size: string;\n  price:number\n};\n\n@Component({\n  selector: 'app-casting',\n  templateUrl: './casting.component.html',\n  styleUrls: ['./casting.component.css']\n})\nexport class CastingComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'size', 'price', 'edit'];\n  dataSource: MatTableDataSource<CastingData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private castingService: CastingService) {\n    this.castingService.getAllCastings().subscribe((result)=>{\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"casting\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<div class=\"main-content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header card-header-danger\">\n                            <h2 class=\"card-title\">Casting Management</h2>\n                            <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                            <button mat-raised-button color=\"warn\" [routerLink]=\"['/casting-profile/']\">New Casting</button>      \n                        </div>\n                        <div class=\"card-body\">\n                            <mat-form-field>\n                                <mat-label>Filter</mat-label>\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name or size\" #input>\n                              </mat-form-field>\n                              \n                              <div class=\"mat-elevation-8\">\n                                <table mat-table [dataSource]=\"dataSource\" matSort>\n                              \n                                  <!-- Name Column -->\n                                  <ng-container matColumnDef=\"name\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                                  </ng-container>\n                              \n                                  <!-- Type Column -->\n                                  <ng-container matColumnDef=\"size\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Size </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.size}} </td>\n                                  </ng-container>\n    \n                                  <!-- Price Column -->\n                                  <ng-container matColumnDef=\"price\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                                    <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                                  </ng-container>\n    \n                                  <ng-container matColumnDef=\"edit\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                    <td mat-cell *matCellDef=\"let row\"> \n                                        <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/casting-profile/', row._id]\">Edit</button>\n                                       </td>\n                                  </ng-container>\n    \n                              \n                                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                              \n                                  <!-- Row shown when there is no matching data. -->\n                                  <tr class=\"mat-row\" *matNoDataRow>\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                                  </tr>\n                                </table>\n                              \n                                <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                              </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n      </div>\n      ","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { InscriptionService } from '../../services/inscription.service';\n\n\nexport interface InscriptionData{\n  name: string;\n  type: string;\n  price:number\n};\n\n@Component({\n  selector: 'app-inscription',\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.css']\n})\nexport class InscriptionComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'type', 'price', 'edit'];\n  dataSource: MatTableDataSource<InscriptionData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private inscriptionService: InscriptionService) {\n    this.inscriptionService.getAllInscriptions().subscribe((result)=>{\n      console.log(result);\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"inscription\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Inscription Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/inscription-profile/']\">New Inscription</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name type\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"name\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                              </ng-container>\n                          \n                              <!-- Type Column -->\n                              <ng-container matColumnDef=\"type\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.type}} </td>\n                              </ng-container>\n\n                              <!-- Price Column -->\n                              <ng-container matColumnDef=\"price\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                                <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/inscription-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QuoteService } from '../../services/quote.service'\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from 'html2canvas';\n\n@Component({\n  selector: 'app-quote-detail',\n  templateUrl: './quote-detail.component.html',\n  styleUrls: ['./quote-detail.component.css']\n})\nexport class QuoteDetailComponent implements OnInit {\n  id;\n  currentQuote={};\n  constructor(private quoteService: QuoteService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n      this.quoteService.getQuote(this.id).subscribe(result=>{\n        this.currentQuote = result['data'];\n        console.log(result['data'].quote.additionalFoundation.length);\n        console.log(this.currentQuote);\n      })\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  exportAsPDF(){\n    let data = document.getElementById(\"download_id\");  \n    console.log(data)\n    html2canvas(data).then(canvas => {\n      const contentDataURL = canvas.toDataURL('image/png') \n      console.log(contentDataURL) \n      let pdf = new jsPDF('p', 'cm', 'a4'); //Generates  PDF in portrait mode\n      var width = pdf.internal.pageSize.getWidth();\n      var height = pdf.internal.pageSize.getHeight();\n      pdf.addImage(contentDataURL, 'PNG', 0, 0, width, height*0.9);  \n      pdf.save('Quote_' + this.currentQuote['quote']['name'] +'.pdf');   \n    }); \n  }\n\n}\n","<!-- <div class=\"downloadbutton\">\n    <button mat-raised-button color=\"primary\" (click)=\"exportAsPDF();\"><mat-icon>get_app</mat-icon> Download</button>\n</div> -->\n<div id=\"download_id\" class=\"invoice-box\">\n    <table cellpadding=\"0\" cellspacing=\"0\">\n        <tr class=\"top\">\n            <td colspan=\"2\">\n                <table>\n                    <tr>\n                        <td class=\"title\">\n                            <img src=\"/assets/images/StonemartLogoLoRes.png\" style=\"width:100%; max-width:300px;\">\n                        </td>\n\n                        <td>\n                            <strong> Stonemart Memorial<br>\n                            310 Mahoneys Road Thomastown Vic 3074<br>\n                            1300 696 896</strong>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n        <tr class=\"information\">\n            <td colspan=\"2\">\n                <table>\n                    <tr>\n                        <td>\n                            <br>\n                            <strong>Customer Name:</strong> {{currentQuote['quote']['name']}}<br>\n                            <strong>Customer Phone:</strong> {{currentQuote['quote'].phone}}<br>\n                            <strong *ngIf=\"currentQuote['quote']['cemetery']\">Cemetary:</strong> {{currentQuote['quote'].cemetery? currentQuote['quote'].cemetery +' ' : \"\"}} <strong *ngIf=\"currentQuote['quote']['section']\">Section:</strong> {{currentQuote['quote'].section? currentQuote['quote'].section : \"\"}}\n                            <br><strong *ngIf=\"currentQuote['quote']['row']\">Row:</strong> {{currentQuote['quote']['row']? currentQuote['quote'].row +' ' : \"\"}} <strong *ngIf=\"currentQuote['quote']['grave_no']\">Grave No :</strong> {{currentQuote['quote']['grave_no']? currentQuote['quote'].grave_no : \"\"}}\n                            <br><strong *ngIf=\"currentQuote['quote']['funeralProvider']\">Funeral Provider:</strong> {{currentQuote['quote']['funeralProvider']? currentQuote['quote']['funeralProvider']: \"\"}}<br>\n                            \n                        </td>\n\n                        <td>\n                            <br>\n                            <strong *ngIf=\"currentQuote['quote']['monumentStyle']\">Style:</strong> {{currentQuote['quote']['monumentStyle']? currentQuote['quote']['monumentStyle'] : \"\"}}<br *ngIf=\"currentQuote['quote']['monumentStyle']\">\n                            <strong *ngIf=\"currentQuote['quote']['advertisement']\">How to Find Us:</strong> {{currentQuote['quote']['advertisement']? currentQuote['quote']['advertisement']: \"\"}}<br *ngIf=\"currentQuote['quote']['advertisement']\"> \n                            <strong>Staff:</strong> {{currentQuote['quote']['staff'].name}}<br>\n                            <strong>Created:</strong> {{currentQuote['quote'].modifiedDate.substring(0,10)}}\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n\n        <tr *ngIf=\"currentQuote['quote'].monument.length>0\" class=\"heading\">\n            <td>\n                Monument\n            </td>\n            <td>\n                Size\n            </td>\n        </tr>\n        <ng-container *ngIf=\"currentQuote['quote'].monument.length>0\">\n            <tr class=\"item\" *ngFor=\"let monu of currentQuote['quote'].monument\">\n                <td>\n                    {{monu.monumentId.englishName + \"/\" \n                    + monu.monumentId.chineseName + \" Origin: \" + monu.monumentId.origin }}\n                </td>\n            </tr>\n        </ng-container>\n\n\n        <!-- <tr *ngIf=\"currentQuote['quote'].monument.length>0\" class=\"details\">\n            <td>\n                {{currentQuote.quote.monument.englishName + \"/\" \n                    + currentQuote.quote.monument.chineseName + \" Origin: \" + currentQuote.quote.monument.origin }}\n            </td>\n            <td>\n                {{currentQuote.quote.monumentSize}}\n            </td>\n        </tr> -->\n\n        <tr *ngIf=\"currentQuote['quote'].installation || currentQuote['quote'].additionalInstallation.length>0\" class=\"heading\">\n            <td>\n                Installation and Delivery\n            </td>\n            <td>\n                Type\n            </td>\n        </tr>\n\n        <tr *ngIf=\"currentQuote['quote'].installation\" class=\"item\">\n            <td>\n                {{currentQuote.quote.installation.name}}\n            </td>\n\n            <td>\n                {{currentQuote.quote.installation.monumentType}}\n            </td>\n        </tr>\n\n        <ng-container *ngIf=\"currentQuote['quote'].additionalInstallation.length>0\">\n        <tr class=\"item\" *ngFor=\"let additionInstall of currentQuote['quote'].additionalInstallation\">\n            <td>\n                {{additionInstall.name}}\n            </td>\n\n            <td>\n                {{additionInstall.monumentType}}\n            </td>\n        </tr>\n        </ng-container>\n\n        <tr *ngIf=\"currentQuote['quote'].foundation || currentQuote['quote'].additionalFoundation.length>0\" class=\"heading\">\n            <td>\n                Foundation\n            </td>\n            <td>\n                Type\n            </td>\n        </tr>\n\n        <tr *ngIf=\"currentQuote['quote'].foundation\" class=\"item\">\n            <td>\n                {{currentQuote.quote.foundation.name}}\n            </td>\n\n            <td>\n                {{currentQuote.quote.foundation.type}}\n            </td>\n        </tr>\n        <ng-container *ngIf=\"currentQuote['quote'].additionalFoundation.length>0\">\n        <tr class=\"item\" *ngFor=\"let additionalFound of currentQuote['quote'].additionalFoundation\">\n            <td>\n                {{additionalFound.name}}\n            </td>\n\n            <td>\n                {{additionalFound.type}}\n            </td>\n        </tr>\n        </ng-container>\n\n        <tr *ngIf=\"currentQuote['quote'].inscription.length>0\" class=\"heading\">\n                <td>\n                    Inscription\n                </td>\n                <td>\n                    Quantity\n                </td>\n        </tr>\n        <ng-container *ngIf=\"currentQuote['quote'].inscription.length>0\">\n                <tr class=\"item\" *ngFor=\"let inscrip of currentQuote['quote'].inscription\">\n                    <td>\n                        {{inscrip.inscriptionId.name}}\n                    </td>\n        \n                    <td>\n                        {{inscrip.inscriptionNumber}}\n                    </td>\n                </tr>\n        </ng-container>\n\n        <tr *ngIf=\"currentQuote['quote'].accessories.length>0\" class=\"heading\">\n                <td>\n                    Accessories\n                </td>\n                <td>\n                    Quantity\n                </td>\n        </tr>\n        <ng-container *ngIf=\"currentQuote['quote'].accessories.length>0\">\n                <tr class=\"item\" *ngFor=\"let accessory of currentQuote['quote'].accessories\">\n                    <td>\n                        {{\"[\" + accessory.accessoriesId.accessoriesType + \"]\" \n                             + accessory.accessoriesId.name\n                            +\" / Size: \" + accessory.accessoriesId.size}}\n                    </td>\n        \n                    <td>\n                        {{accessory.accessoriesNumber}}\n                    </td>\n                </tr>\n        </ng-container>\n\n        <tr *ngIf=\"currentQuote['quote'].casting.length>0\" class=\"heading\">\n                <td>\n                    Casting\n                </td>\n                <td>\n                    Quantity\n                </td>\n        </tr>\n        <ng-container *ngIf=\"currentQuote['quote'].casting.length>0\">\n                <tr class=\"item\" *ngFor=\"let casting of currentQuote['quote'].casting\">\n                    <td>\n                        {{ casting.castingId.name + \" / Size: \" + casting.castingId.size}}\n                    </td>\n        \n                    <td>\n                        {{casting.castingNumber}}\n                    </td>\n                </tr>\n        </ng-container>\n        <tr *ngIf=\"currentQuote['quote'].extraFee || currentQuote['quote'].permitFee\" class=\"heading\">\n            <td>\n                Extra Fee/Permit Fee\n            </td>\n            <td>\n                Price\n            </td>\n        </tr>\n        <tr *ngIf=\"currentQuote['quote'].extraFee\" class=\"details\">\n            <td>\n                Extra Fee\n            </td>\n            <td>\n                {{currentQuote.quote.extraFee}}\n            </td>\n        </tr>\n        <tr *ngIf=\"currentQuote['quote'].permitFee\" class=\"details\">\n                <td>\n                    Permit Fee\n                </td>\n                <td>\n                    {{currentQuote.quote.permitFee}}\n                </td>\n            </tr>\n        <tr class=\"total\">\n            <td></td>\n\n            <td>\n                Total: ${{currentQuote[\"totalPrice\"]}}\n            </td>\n        </tr>\n    </table>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllUsers(){\n    return this.http.get(\"/api/v1/users/\");\n  }\n\n  createUser(newUser){\n    return this.http.post(\"/api/v1/users/signup/\", newUser, httpOptions)\n  }\n\n  getUser(userId){\n    return this.http.get(\"/api/v1/users/\" + userId)\n  }\n\n  updateUser(userId, newUser){\n    return this.http.patch(\"/api/v1/users/\" + userId, newUser, httpOptions);\n  }\n\n  deleteUser(userId){\n    return this.http.delete(\"/api/v1/users/\" + userId)\n  }\n\n  resetPassword(userId, newPassword){\n    return this.http.patch(\"/api/v1/users/updatePassword/\" + userId, newPassword, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { InscriptionService } from '../../services/inscription.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-inscription-profile',\n  templateUrl: './inscription-profile.component.html',\n  styleUrls: ['./inscription-profile.component.css']\n})\nexport class InscriptionProfileComponent implements OnInit {\n  currentInscription =  {name:\"\",type:\"\",price:0};\n  id;\n\n  constructor(private inscriptionService: InscriptionService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.inscriptionService.getInscription(this.id).subscribe(result=>{\n         console.log(result['data']['inscription']);\n          this.currentInscription =result['data']['inscription'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newInscription){\n    if(this.id) {\n      this.inscriptionService.updateInscription(this.id,newInscription).subscribe(result=>{\n        this.router.navigate(['/inscriptionslist'])\n      });\n    }\n    else{\n        this.inscriptionService.createInscription(newInscription).subscribe(result=>{\n          this.router.navigate(['/inscriptionslist'])\n    });\n      \n    }\n  }\n\n  deleteInscription(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.inscriptionService.deleteInscription(this.id).subscribe(result=>{\n        this.router.navigate(['/inscriptionslist'])\n      });\n    }\n    return\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Inscription</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentInscription.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #type=\"ngModel\" [(ngModel)]=\"currentInscription.type\" name=\"type\" matInput placeholder=\"Type\">\n                                    </mat-form-field>\n                                </div>\n             \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #price=\"ngModel\" [(ngModel)]=\"currentInscription.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                        Price is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Inscription</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Inscription</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteInscription()\">Delete Inscription</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { QuoteService } from '../../services/quote.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nexport interface DialogData {\n  reason: string;\n  status: string;\n}\n\nexport interface QuoteData{\n  name: string;\n  phone: string;\n  cemetery:string;\n  advertisement: string;\n  modifiedDate: string;\n  status;\n  staff;\n};\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'phone', 'cemetery', 'advertisement', 'modifiedDate', 'status', 'staff','edit'];\n  dataSource: MatTableDataSource<QuoteData>;\n  \n  status: string;\n  reason: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private quoteService: QuoteService,\n              private router: Router,\n              public dialog: MatDialog) { \n    this.quoteService.getAllQuotes().subscribe((result)=>{\n      let data = result[\"data\"][\"quote\"];\n      data.forEach(element => {\n        element['staff'] = element['staff']['name'];\n        console.log(element)\n      });\n      this.dataSource = new MatTableDataSource(data)\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateSuccess(id, newStatus){\n    this.quoteService.updateStatus(id,newStatus).subscribe(result=>{\n      this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n        this.router.navigate(['/quoteslist']);\n    }); \n    })\n  }\n\n  openDialog(quote): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '450px',\n      data: {reason: quote.reason, status:quote.status}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result)\n      this.updateSuccess(quote._id, result);\n    });\n  }\n\n}\n\n@Component({\n    selector: 'dialog-overview-example-dialog',\n    templateUrl: 'dialog-overview-example-dialog.html',\n    styleUrls: ['./quote.component.css']\n  })\nexport class DialogOverviewExampleDialog {\n  constructor(\n      public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n      @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n  \n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n  \n}\n\n\n","<div class=\"main-content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header card-header-danger\">\n                            <h2 class=\"card-title\">Quote Management</h2>\n                            <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                            <button mat-raised-button color=\"warn\" [routerLink]=\"['/calculator2/']\">New Quote</button>      \n                        </div>\n                        <div class=\"card-body\">\n                            <mat-form-field>\n                                <mat-label>Filter</mat-label>\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name or other information\" #input>\n                              </mat-form-field>\n                              \n                              <div class=\"mat-elevation-8\">\n                                <table mat-table [dataSource]=\"dataSource\" matSort>\n                              \n                                  <!-- Name Column -->\n                                  <ng-container matColumnDef=\"name\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer Name </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                                  </ng-container>\n                                  <!-- Chinese Name Column -->\n                                  <ng-container matColumnDef=\"phone\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer Phone </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n                                  </ng-container>\n    \n                                  <!-- Color Column -->\n                                  <ng-container matColumnDef=\"cemetery\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cemetery </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.cemetery}} </td>\n                                  </ng-container>\n                              \n                                  <!-- Origin Column -->\n                                  <ng-container matColumnDef=\"advertisement\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> How to Find </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.advertisement}} </td>\n                                  </ng-container>\n    \n                                  <!-- Size Column -->\n                                  <ng-container matColumnDef=\"modifiedDate\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.modifiedDate.substring(0,10)}} </td>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"status\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n                                    </ng-container>\n\n                                <ng-container matColumnDef=\"staff\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Staff </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.staff}} </td>\n                                </ng-container>\n    \n                                  <ng-container matColumnDef=\"edit\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                    <td mat-cell *matCellDef=\"let row\">\n                                        <button id=\"editButton\" mat-raised-button color=\"primary\" [routerLink]=\"['/quotedetail/', row._id]\">View Detail</button>\n                                        <button id=\"editButton\" mat-raised-button color=\"warn\" (click)=\"openDialog(row)\">Status</button> \n                                    </td>\n                                  </ng-container>\n    \n                              \n                                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                              \n                                  <!-- Row shown when there is no matching data. -->\n                                  <tr class=\"mat-row\" *matNoDataRow>\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                                  </tr>\n                                </table>\n                              \n                                <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                              </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n      </div>\n      ","<div mat-dialog-content>\n  <p>Case description</p>\n  <mat-form-field>\n        <mat-label>-- Select Status --</mat-label>\n          <mat-select [(ngModel)]=\"data.status\" name=\"status\" required>\n            <mat-option>--</mat-option>\n            <mat-option value=\"Success\">Success </mat-option>\n            <mat-option value=\"Pending\">Pending </mat-option>\n            <mat-option value=\"Fail\">Fail </mat-option>\n          </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <textarea matInput [(ngModel)]=\"data.reason\" placeholder=\"Please input case description\"></textarea>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Submit</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { InstallationService } from '../../services/installation.service';\n\n\nexport interface InstallationData{\n  name: string;\n  type: string;\n  price:number\n};\n\n@Component({\n  selector: 'app-installation',\n  templateUrl: './installation.component.html',\n  styleUrls: ['./installation.component.css']\n})\nexport class InstallationComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'monumentType', 'price', 'edit'];\n  dataSource: MatTableDataSource<InstallationData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private installationService: InstallationService) {\n    this.installationService.getAllInstallations().subscribe((result)=>{\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"installation\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Installation Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/installation-profile/']\">New Installation</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name type or size\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"name\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                              </ng-container>\n                          \n                              <!-- Type Column -->\n                              <ng-container matColumnDef=\"monumentType\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.monumentType}} </td>\n                              </ng-container>\n\n                              <!-- Price Column -->\n                              <ng-container matColumnDef=\"price\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                                <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/installation-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { MonumentService } from '../../services/monument.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-monument-profile',\n  templateUrl: './monument-profile.component.html',\n  styleUrls: ['./monument-profile.component.css']\n})\nexport class MonumentProfileComponent implements OnInit {\n  sizes: string[] = ['0.15-0.35 Cubic', '0.35-0.91 Cubic', '0.91-1.7 Cubic'];\n  currentMonument =  {englishName:\"\",chineseName:\"\",color:\"\",origin:\"\",size:\"\",price:0};\n  id;\n\n  constructor(private monumentService: MonumentService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.monumentService.getMonument(this.id).subscribe(result=>{\n         console.log(result['data']['monument']);\n          this.currentMonument =result['data']['monument'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newMonument){\n    if(this.id) {\n      this.monumentService.updateMonument(this.id,newMonument).subscribe(result=>{\n        this.router.navigate(['/monumentslist'])\n      });\n    }\n    else{\n        this.monumentService.createMonument(newMonument).subscribe(result=>{\n          this.router.navigate(['/monumentslist'])\n    });\n      \n    }\n  }\n\n  deleteMonument(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.monumentService.deleteMonument(this.id).subscribe(result=>{\n        this.router.navigate(['/monumentslist'])\n      });\n    }\n    return\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Monument</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #englishName=\"ngModel\" [(ngModel)]=\"currentMonument.englishName\" name=\"englishName\" matInput placeholder=\"English Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"englishName.touched && englishName.invalid && englishName.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #chineseName=\"ngModel\" [(ngModel)]=\"currentMonument.chineseName\" name=\"chineseName\" matInput placeholder=\"Chinese Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"chineseName.touched && chineseName.invalid && chineseName.errors.required\">\n                                        Chinese Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #color=\"ngModel\" [(ngModel)]=\"currentMonument.color\" name=\"color\" matInput placeholder=\"Color\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"color.touched && color.invalid && color.errors.required\">\n                                        Color <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #origin=\"ngModel\" [(ngModel)]=\"currentMonument.origin\" name=\"origin\" matInput placeholder=\"Origin\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"origin.touched && origin.invalid && origin.errors.required\">\n                                        Origin is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Size --</mat-label>\n                                          <mat-select [(ngModel)]=\"currentMonument.size\" name=\"size\" required>\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                                              {{ size }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #price=\"ngModel\" [(ngModel)]=\"currentMonument.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                        Price is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Monument</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Monument</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteMonument()\">Delete Monument</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n    headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n  };\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MonumentService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllMonuments(){\n    return this.http.get(\"/api/v1/monument/\", httpOptions);\n  }\n\n  getMonument(monumentId){\n    return this.http.get(\"/api/v1/monument/\" + monumentId, httpOptions);\n  }\n\n  createMonument(newMonument){\n    return this.http.post(\"/api/v1/monument/\", newMonument, httpOptions);\n  }\n\n  updateMonument(monumentId, newMonument){\n    return this.http.patch(\"/api/v1/monument/\" + monumentId, newMonument, httpOptions)\n  }\n\n  deleteMonument(monumentId){\n    return this.http.delete(\"/api/v1/monument/\" + monumentId, httpOptions)\n  }\n\n  getMonumentByOther(params){\n    return this.http.get(\"/api/v1/monument/\" + params, httpOptions )\n  }\n\n  getMateiralDiscount(){\n    return this.http.get(\"/api/v1/monument/discount/\"+ \"5fd988833f005c069b66f844\", httpOptions)\n  }\n\n  updateMateiralDiscount(newDiscount){\n    return this.http.patch(\"/api/v1/monument/discount/\"+ \"5fd988833f005c069b66f844\", newDiscount, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private authService: AuthService) { }\n\n  canActivate(){\n    if(this.authService.isLoggedIn()) return true;\n\n    this.router.navigate(['/login']);\n    return false;\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n  };\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstallationService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllInstallations(){\n \n    return this.http.get(\"/api/v1/install/\", httpOptions);\n  }\n\n  getInstallation(installationId){\n    return this.http.get(\"/api/v1/install/\" + installationId, httpOptions);\n  }\n\n  createInstallation(newInstallation){\n    return this.http.post(\"/api/v1/install/\", newInstallation, httpOptions);\n  }\n\n  updateInstallation(installationId, newInstallation){\n    return this.http.patch(\"/api/v1/install/\" + installationId, newInstallation, httpOptions)\n  }\n\n  deleteInstallation(installationId){\n    return this.http.delete(\"/api/v1/install/\" + installationId, httpOptions)\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { InscriptionQuoteService } from '../../services/inscription-quote.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nexport interface DialogData {\n  reason: string;\n  status: string;\n}\n\nexport interface QuoteData{\n  name: string;\n  phone: string;\n  cemetery:string;\n  advertisement: string;\n  modifiedDate: string;\n  status;\n  staff;\n};\n\n@Component({\n  selector: 'app-inscription-quote',\n  templateUrl: './inscription-quote.component.html',\n  styleUrls: ['./inscription-quote.component.css']\n})\nexport class InscriptionQuoteComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'phone', 'cemetery', 'advertisement', 'modifiedDate', 'status', 'staff','edit'];\n  dataSource: MatTableDataSource<QuoteData>;\n  \n  status: string;\n  reason: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private quoteService: InscriptionQuoteService,\n              private router: Router,\n              public dialog: MatDialog) { \n    this.quoteService.getAllInscriptionQuotes().subscribe((result)=>{\n      console.log(result)\n      let data = result[\"data\"][\"inscriptionQuote\"];\n      data.forEach(element => {\n        element['staff'] = element['name'];\n        console.log(element)\n      });\n      this.dataSource = new MatTableDataSource(data)\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateSuccess(id, newStatus){\n    this.quoteService.updateStatus(id,newStatus).subscribe(result=>{\n      this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n        this.router.navigate(['/inscriptionQuoteslist']);\n    }); \n    })\n  }\n\n  openDialog(quote): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog1, {\n      width: '450px',\n      data: {reason: quote.reason, status:quote.status}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result)\n      this.updateSuccess(quote._id, result);\n    });\n  }\n\n}\n\n@Component({\n    selector: 'dialog-overview-example-dialog1',\n    templateUrl: 'dialog-overview-example-dialog.html',\n    styleUrls: ['./inscription-quote.component.css']\n  })\nexport class DialogOverviewExampleDialog1 {\n  constructor(\n      public dialogRef: MatDialogRef<DialogOverviewExampleDialog1>,\n      @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n  \n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n  \n}","<div class=\"main-content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header card-header-danger\">\n                            <h2 class=\"card-title\">Inscription On Site Management</h2>\n                            <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                            <button mat-raised-button color=\"warn\" [routerLink]=\"['/calculator/']\">New Quote</button>      \n                        </div>\n                        <div class=\"card-body\">\n                            <mat-form-field>\n                                <mat-label>Filter</mat-label>\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name or other information\" #input>\n                              </mat-form-field>\n                              \n                              <div class=\"mat-elevation-8\">\n                                <table mat-table [dataSource]=\"dataSource\" matSort>\n                              \n                                  <!-- Name Column -->\n                                  <ng-container matColumnDef=\"name\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer Name </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                                  </ng-container>\n                                  <!-- Chinese Name Column -->\n                                  <ng-container matColumnDef=\"phone\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer Phone </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n                                  </ng-container>\n    \n                                  <!-- Color Column -->\n                                  <ng-container matColumnDef=\"cemetery\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cemetery </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.cemetery}} </td>\n                                  </ng-container>\n                              \n                                  <!-- Origin Column -->\n                                  <ng-container matColumnDef=\"advertisement\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> How to Find </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.advertisement}} </td>\n                                  </ng-container>\n    \n                                  <!-- Size Column -->\n                                  <ng-container matColumnDef=\"modifiedDate\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.modifiedDate.substring(0,10)}} </td>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"status\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n                                    </ng-container>\n\n                                <ng-container matColumnDef=\"staff\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Staff </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.staff}} </td>\n                                </ng-container>\n    \n                                  <ng-container matColumnDef=\"edit\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                    <td mat-cell *matCellDef=\"let row\">\n                                        <button id=\"editButton\" mat-raised-button color=\"primary\" [routerLink]=\"['/InscriptionQuotesDetail/', row._id]\">View Detail</button>\n                                        <button id=\"editButton\" mat-raised-button color=\"warn\" (click)=\"openDialog(row)\">Status</button> \n                                    </td>\n                                  </ng-container>\n    \n                              \n                                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                              \n                                  <!-- Row shown when there is no matching data. -->\n                                  <tr class=\"mat-row\" *matNoDataRow>\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                                  </tr>\n                                </table>\n                              \n                                <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                              </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n      </div>\n      ","<div mat-dialog-content>\n  <p>Case description</p>\n  <mat-form-field>\n        <mat-label>-- Select Status --</mat-label>\n          <mat-select [(ngModel)]=\"data.status\" name=\"status\" required>\n            <mat-option>--</mat-option>\n            <mat-option value=\"Success\">Success </mat-option>\n            <mat-option value=\"Pending\">Pending </mat-option>\n            <mat-option value=\"Fail\">Fail </mat-option>\n          </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <textarea matInput [(ngModel)]=\"data.reason\" placeholder=\"Please input case description\"></textarea>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Submit</button>\n</div>","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'jsmcalculator';\n\n  constructor(private router: Router, public authService: AuthService) { }\n\n  logout(){\n    this.authService.logout()\n    this.router.navigate(['/login'])\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <!-- <button mat-icon-button>\n      <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n    </button> -->\n    <h1 [routerLink]=\"'/'\" id=\"companyTitle\">John Stonemart</h1>\n    <span class=\"menu-spacer\"></span>\n    <button mat-button [matMenuTriggerFor]=\"menu\">Get a Quote</button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"'/calculator2'\">Monument Quote</button>\n        <button mat-menu-item [routerLink]=\"'/inscriptioncalculator'\">Inscription On Site</button>\n        <button mat-menu-item [routerLink]=\"'/calculator2'\">Renovation</button>\n      </mat-menu>\n    <button mat-button [matMenuTriggerFor]=\"men\">Previous Quote</button>\n      <mat-menu #men=\"matMenu\">\n      <button mat-button [routerLink]=\"'/quoteslist'\"> Monument Quote </button> \n      <button mat-button [routerLink]=\"'/inscriptionQuoteslist'\"> Inscription Quote </button> \n      </mat-menu> \n      <!-- <button mat-button [routerLink]=\"'/dailyreport'\"> Upload Daily Report </button>\n      <button mat-button [routerLink]=\"'/somethingelse'\"> Upload Daily something </button> -->\n     <!-- <button mat-button [routerLink]=\"'/create-activity'\"> Create Activity </button> -->\n      <span class=\"example-spacer\"></span>\n      <button mat-button *ngIf=\"authService.currentUser\" (click)=\"sidenav.toggle()\" > Management </button>\n      <button *ngIf=\"!authService.isLoggedIn()\" mat-button [routerLink]=\"'/login'\"> Log in </button>\n      <button *ngIf=\"authService.isLoggedIn()\" mat-button (click)=\"logout()\"> Logout </button>\n      <!-- <button mat-mini-fab layout-align=\"space-between center\" color=\"warn\" [routerLink]=\"'/create-activity'\"> <mat-icon>person</mat-icon> </button>\n    -->\n  </mat-toolbar-row>\n\n  <!-- <mat-toolbar-row>\n      <span style=\"font-size: 12px;\">SimpleCRM helps you easily manage your contacts</span>\n    </mat-toolbar-row>-->\n</mat-toolbar> \n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav>\n    <mat-nav-list>\n      <a mat-list-item *ngIf=\"authService.currentUser\" [routerLink]=\"'/userslist'\"> Manage Users </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/monumentslist'\"> Monument </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/installationslist'\"> Installation </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/castingslist'\"> Casting </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/inscriptionslist'\"> Inscription </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/accessorieslist'\"> Accessories </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/foundationslist'\"> Foundation </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/additionalInscriptionslist'\"> Installation on Site </a>\n      <a mat-list-item *ngIf=\"authService.currentUser\"[routerLink]=\"'/ipslist'\"> IP Management </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div style=\"height: 88vh;\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { IpServiceService } from '../../services/ip-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-ip-profile',\n  templateUrl: './ip-profile.component.html',\n  styleUrls: ['./ip-profile.component.css']\n})\nexport class IpProfileComponent implements OnInit {\n  currentIp =  {location:\"\",ip:\"\"};\n  id;\n  \n  constructor(private ipService: IpServiceService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.ipService.getIpAddress(this.id).subscribe(result=>{\n         console.log(result['data']['ipAddress']);\n          this.currentIp =result['data']['ipAddress'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n   save(newIpAddress){\n    if(this.id) {\n      this.ipService.updateIpAddress(this.id,newIpAddress).subscribe(result=>{\n        this.router.navigate(['/ipslist'])\n      });\n    }\n    else{\n        this.ipService.createIpAddress(newIpAddress).subscribe(result=>{\n          this.router.navigate(['/ipslist'])\n    });\n      \n    }\n  }\n\n  deleteIpAddress(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.ipService.deleteIpAddress(this.id).subscribe(result=>{\n        this.router.navigate(['/ipslist'])\n      });\n    }\n    return\n  }\n\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">IP Management</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #location=\"ngModel\" [(ngModel)]=\"currentIp.location\" name=\"location\" matInput placeholder=\"Location\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"location.touched && location.invalid && location.errors.required\">\n                                        Location is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #ip=\"ngModel\" [(ngModel)]=\"currentIp.ip\" name=\"ip\" matInput placeholder=\"IP\">\n                                    </mat-form-field>\n                                </div>\n             \n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create IP Address</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update IP Address</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteIpAddress()\">Delete IP Address</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdditionalInscriptionServiceService } from 'src/app/services/additional-inscription-service.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { InscriptionQuoteService } from 'src/app/services/inscription-quote.service';\n\n\n@Component({\n  selector: 'app-inscription-quote-steper',\n  templateUrl: './inscription-quote-steper.component.html',\n  styleUrls: ['./inscription-quote-steper.component.css']\n})\nexport class InscriptionQuoteSteperComponent implements OnInit {\n\n  monumentStyles = ['Lawn', 'Single', 'Double', 'Family'];\n  \n  inscriptionTypeList: string[] = ['English', 'Chinese', 'Arabic', 'Decoration'];\n  doorList;\n  currentQuote = {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    cemetary: \"\",\n    section: \"\",\n    inscription: [],\n    note: \"\",\n    funeralProvider: \"\",\n    advertisement: \"\",\n    extraFee: 0,\n    permitFee: 0\n  };\n\n  customerFormGroup: FormGroup;\n  styleFormGroup: FormGroup;\n  permitFormGroup: FormGroup;\n  inscriptionFormGroup: FormGroup;\n  \n  extraFeeFormGroup: FormGroup;\n\n\n  inscriptionList = [];\n  inscriptionCollection = [{\"inscriptionNumber\":0}];\n  inscriptionNameCollection = [[]]\n  inscription_id = 0;\n\n\n  constructor(private _formBuilder: FormBuilder,\n    private inscriptionService: AdditionalInscriptionServiceService,\n    private authService: AuthService,\n    private inscriptionQuoteService: InscriptionQuoteService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.customerFormGroup = this._formBuilder.group({\n      name: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: [''],\n      cemetery: [''],\n      section: [''],\n      funeralProvider: ['',Validators.required],\n      advertisement: ['',Validators.required],\n      row:[''],\n      grave_no:[''],\n    });\n    this.styleFormGroup = this._formBuilder.group({\n      monumentStyle: ['', Validators.required]\n    });\n\n    this.permitFormGroup = this._formBuilder.group({\n      permitFee: ['', Validators.required]\n    });\n\n   \n\n    this.inscriptionFormGroup = this._formBuilder.group({\n      inscriptionType0: ['',],\n      inscription0: ['',],\n      inscriptionNumber0: ['',],\n    });\n\n    this.extraFeeFormGroup = this._formBuilder.group({\n      extraFee: ['', Validators.required]\n    });\n\n    this.extraFeeFormGroup = this._formBuilder.group({\n      extraFee: ['', Validators.required]\n    });\n  }\n\n  \n  //inscription part\n  filterInscription(type, index) {\n    this.inscriptionNameCollection[index] = [];\n    this.getInscription(type, index);\n  }\n\n  getInscription(type, index) {\n    let params = '?type=' + type;\n    this.inscriptionService.getInscriptionByOther(params).subscribe(result => {\n      result['data']['inscription'].forEach(element => {\n        this.inscriptionNameCollection[index].push({ name: element.name, _id: element._id });\n      })\n    })\n  }\n\n  addInscription() {\n    this.inscription_id += 1;\n    this.inscriptionFormGroup.addControl(('inscriptionType' + this.inscription_id), this._formBuilder.control(''));\n    this.inscriptionFormGroup.addControl(('inscription' + this.inscription_id), this._formBuilder.control(''));\n    this.inscriptionFormGroup.addControl(('inscriptionNumber' + this.inscription_id), this._formBuilder.control(''));\n    this.inscriptionCollection.push({\"inscriptionNumber\":0});\n  }\n\n  removeInscription(index) {\n    this.inscriptionCollection.splice(index, 1);\n  }\n\n  \n\n\n  submitData() {\n    let customerData = this.customerFormGroup.value;\n    let monumentType = this.styleFormGroup.value;\n    let permitData = this.permitFormGroup.value;\n    let extraData = this.extraFeeFormGroup.value;\n    \n\n    let quoteData = { ...customerData, ...monumentType, ...permitData, ...extraData};\n    \n    quoteData.accessories = [];\n    quoteData.monument = [];\n    quoteData.inscription = [];\n    quoteData.casting =[];\n    \n\n    if (this.inscriptionCollection[0]['inscriptionId'] != undefined && this.inscriptionCollection[0]['inscriptionNumber'] != undefined ) {\n      this.inscriptionCollection.forEach(element => {\n        if (element['inscriptionNumber'] != undefined && element['inscriptionId'] != undefined) {\n          quoteData.inscription.push({\n            inscriptionId: element['inscriptionId'],\n            inscriptionNumber: element['inscriptionNumber']\n          })\n        }\n      })\n    }\n    quoteData.staff = this.authService.currentUserId();\n    this.clean(quoteData);\n    console.log(quoteData)\n    this.inscriptionQuoteService.checkPhone(quoteData.phone).subscribe(res=>{\n      if(res['status']== 'old'){\n        if(confirm('This Customer got a quote from ' + res['data'])){\n          this.inscriptionQuoteService.createInscriptionQuote(quoteData).subscribe((result)=>{\n            if(result['data']['quoteId']){\n              let quoteId = result['data']['quoteId']\n               this.router.navigate(['/InscriptionQuotesDetail/' + quoteId])\n            }\n        });\n        }\n      }\n      else{\n        this.inscriptionQuoteService.createInscriptionQuote(quoteData).subscribe((result)=>{\n          if(result['data']['quoteId']){\n            let quoteId = result['data']['quoteId']\n            this.router.navigate(['/InscriptionQuotesDetail/' + quoteId])\n            console.log(quoteData);\n      }\n    })\n    return\n      }\n    })\n\n  }\n  clean(obj) {\n    for (var propName in obj) {\n      if (obj[propName] === \"\" || (Array.isArray(obj[propName]) && obj[propName].length == 0)) {\n        delete obj[propName];\n      }\n    }\n  }\n\n}\n","<mat-horizontal-stepper linear #stepper>\n        <mat-step [stepControl]=\"customerFormGroup\">\n            <form [formGroup]=\"customerFormGroup\">\n                <ng-template matStepLabel>Customer Information</ng-template>\n                <div class=\"middle-steper\">\n                    <mat-form-field>\n                        <input formControlName=\"name\" matInput placeholder=\"Customer Name\" required>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input formControlName=\"phone\" matInput placeholder=\"Phone\" required>\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input formControlName=\"email\" matInput placeholder=\"Email\" type=\"email\">\n                    </mat-form-field>\n                </div>\n                <div class=\"middle-steper\">\n                    <mat-form-field>\n                        <input formControlName=\"cemetery\" matInput placeholder=\"Cemetery\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input formControlName=\"section\" matInput placeholder=\"Section\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input formControlName=\"funeralProvider\" matInput placeholder=\"Funeral Provider\">\n                    </mat-form-field>\n                </div>\n                <div class=\"middle-steper\">\n                    <mat-form-field>\n                        <input formControlName=\"row\" matInput placeholder=\"Row\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input formControlName=\"grave_no\" matInput placeholder=\"Grave No\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input formControlName=\"advertisement\" matInput placeholder=\"How did you find us\">\n                    </mat-form-field>\n    \n                </div>\n                <!-- <mat-form-field>\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"firstCtrl\" placeholder=\"Last name, First name\" required>\n                </mat-form-field> -->\n                <div>\n                    <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                </div>\n            </form>\n        </mat-step>\n       \n        <mat-step [stepControl]=\"permitFormGroup\">\n            <form [formGroup]=\"permitFormGroup\">\n                <ng-template matStepLabel>Permit</ng-template>\n                <div class=\"middle-steper\">\n                    <mat-form-field>\n                        <input [(ngModel)]=\"currentQuote.permitFee\" formControlName=\"permitFee\" matInput\n                            placeholder=\"Permit Fee\" type=\"number\" min=\"0\" required>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                    <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n                </div>\n            </form>\n        </mat-step>\n        <mat-step [stepControl]=\"inscriptionFormGroup\">\n            <form [formGroup]=\"inscriptionFormGroup\">\n                <ng-template matStepLabel>Inscription</ng-template>\n                <div class=\"col-md-12\" *ngFor=\"let inscription of inscriptionCollection; let i = index;\">\n                    <mat-form-field class=\"example-full-width col-md-2\">\n                        <mat-label>-- Select Type --</mat-label>\n                        <mat-select [(ngModel)]=\"inscription.type\" formControlName=\"inscriptionType{{i}}\"\n                            (selectionChange)=\"filterInscription($event.value, i)\">\n                            <mat-option>--</mat-option>\n                            <mat-option *ngFor=\"let type of inscriptionTypeList\" [value]=\"type\">\n                                {{ type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"example-full-width col-md-6\">\n                        <mat-label>-- Select Inscription --</mat-label>\n                        <mat-select [(ngModel)]=\"inscription.inscriptionId\" formControlName=\"inscription{{i}}\">\n                            <mat-option>--</mat-option>\n                            <mat-option *ngFor=\"let singleInscription of inscriptionNameCollection[i]\"\n                                [value]=\"singleInscription._id\">\n                                {{ singleInscription.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"example-full-width col-md-2\">\n                        <input [(ngModel)]=\"inscription.inscriptionNumber\" formControlName=\"inscriptionNumber{{i}}\" matInput\n                            placeholder=\"Number\" type=\"number\">\n                    </mat-form-field>\n                    <button mat-button *ngIf=\"inscriptionCollection.length != 1 \" type=\"button\"\n                        (click)=\"removeInscription(i)\">\n                        <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                            remove_circle_outline</mat-icon>\n                    </button>\n                    <button mat-button *ngIf=\"i == (inscriptionCollection.length - 1)\" type=\"button\"\n                        (click)=\"addInscription()\">\n                        <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                            add_circle_outline</mat-icon>\n                    </button>\n    \n                </div>\n                <div>\n                    <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                    <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n                </div>\n            </form>\n        </mat-step>\n        <mat-step [stepControl]=\"extraFeeFormGroup\">\n            <form [formGroup]=\"extraFeeFormGroup\">\n                <ng-template matStepLabel>Extra Fee</ng-template>\n                <div class=\"middle-steper\">\n                    <mat-form-field>\n                        <input [(ngModel)]=\"currentQuote.extraFee\" formControlName=\"extraFee\" matInput\n                            placeholder=\"Extra Fee\" type=\"number\" min=\"0\" required>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                    <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n                </div>\n            </form>\n        </mat-step>\n\n    \n        <mat-step>\n            <ng-template matStepLabel>Done</ng-template>\n            <p>You have completed the quotation form</p>\n            <div>\n                <button style=\"float: right;\" mat-button type=\"button\" (click)=\"submitData()\">Submit</button>\n            </div>\n        </mat-step>\n    </mat-horizontal-stepper>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { CustomFormsModule } from 'ng2-validation';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatStepperModule} from '@angular/material/stepper';\n \n\nimport { Routes } from '@angular/router';\n\nimport { UsersComponent } from './users/users.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { UsersService } from './services/users.service'\n\nimport { MonumentService } from './services/monument.service';\nimport { MonumentComponent } from './monument-sector/monument/monument.component';\nimport { MonumentProfileComponent } from './monument-sector/monument-profile/monument-profile.component';\n\nimport { InstallationService } from './services/installation.service';\nimport { InstallationComponent } from './installation-sector/installation/installation.component';\nimport { InstallationProfileComponent } from './installation-sector/installation-profile/installation-profile.component';\n\nimport { InscriptionService } from './services/inscription.service';\nimport { InscriptionComponent } from './inscription-sector/inscription/inscription.component';\nimport { InscriptionProfileComponent } from './inscription-sector/inscription-profile/inscription-profile.component';\n\nimport { FoundationService } from './services/foundation.service';\nimport { FoundationComponent } from './foundation-sector/foundation/foundation.component';\nimport { FoundationProfileComponent } from './foundation-sector/foundation-profile/foundation-profile.component';\n\nimport { AccessoriesComponent } from './accessories-sector/accessories/accessories.component';\nimport { AccessoriesProfileComponent } from './accessories-sector/accessories-profile/accessories-profile.component'\nimport { AccessoriesService } from './services/accessories.service';\nimport { QuoteComponent, DialogOverviewExampleDialog } from './quote-sector/quote/quote.component';\nimport { QuoteProfileComponent } from './quote-sector/quote-profile/quote-profile.component';\nimport { QuoteDetailComponent } from './quote-sector//quote-detail/quote-detail.component';\nimport { IpGuard } from './services/ip-guard.service';\nimport { IpServiceService } from './services/ip-service.service';\nimport { IpAddressComponent } from './ip-sector/ip-address/ip-address.component';\nimport { IpProfileComponent } from './ip-sector/ip-profile/ip-profile.component';\nimport { IpRegisterComponent } from './ip-sector/ip-register/ip-register.component';\nimport { NopermissionComponent } from './notfound/nopermission/nopermission.component';\nimport { QuoteStepperComponent } from './quote-sector/quote-stepper/quote-stepper.component';\nimport { CastingComponent } from './casting-sector/casting/casting.component';\nimport { CastingProfileComponent } from './casting-sector/casting-profile/casting-profile.component';\nimport { InscriptionQuoteComponent, DialogOverviewExampleDialog1 } from './inscriptionQuoteSector/inscription-quote/inscription-quote.component';\nimport { InscriptionQuoteSteperComponent } from './inscriptionQuoteSector/inscription-quote-steper/inscription-quote-steper.component';\nimport { InscriptionQuoteDetailComponent } from './inscriptionQuoteSector/inscription-quote-detail/inscription-quote-detail.component';\nimport { AdditionalInscriptionComponent } from './additionalInscription-sector/additional-inscription/additional-inscription.component';\nimport { AdditionalInscriptionProfileComponent } from './additionalInscription-sector/additional-inscription-profile/additional-inscription-profile.component';\n\n\nconst adminRoutes: Routes = [\n  { path: 'userslist',  component:UsersComponent, canActivate:[IpGuard,AuthGuard]},\n  { path: 'user-profile',   component: UserProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'user-profile/:id',   component: UserProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'resetpassword/:id',   component: UserProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //monument management\n  { path: 'monumentslist',   component: MonumentComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'monument-profile',   component: MonumentProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'monument-profile/:id',   component: MonumentProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //installation management\n  { path: 'installationslist',   component: InstallationComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'installation-profile',   component: InstallationProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'installation-profile/:id',   component: InstallationProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //casting \n  { path: 'castingslist',   component: CastingComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'casting-profile',   component: CastingProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'casting-profile/:id',   component: CastingProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //inscription management\n  { path: 'inscriptionslist',   component: InscriptionComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'inscription-profile',   component: InscriptionProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'inscription-profile/:id',   component: InscriptionProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //inscription on site\n  { path: 'additionalInscriptionslist',   component: AdditionalInscriptionComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'additionalInscription-profile',   component: AdditionalInscriptionProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'additionalInscription-profile/:id',   component: AdditionalInscriptionProfileComponent, canActivate:[IpGuard,AuthGuard] },\n\n  //foundation management\n  { path: 'foundationslist',   component: FoundationComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'foundation-profile',   component: FoundationProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'foundation-profile/:id',   component: FoundationProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //accessories\n  { path: 'accessorieslist',   component: AccessoriesComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'accessories-profile',   component: AccessoriesProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'accessories-profile/:id',   component: AccessoriesProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  //quote\n  { path: 'quoteslist',   component: QuoteComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'calculator',   component: QuoteProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'calculator2',   component: QuoteStepperComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'quotedetail/:id',   component: QuoteDetailComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'inscriptionQuoteslist',   component: InscriptionQuoteComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'inscriptioncalculator',   component: InscriptionQuoteSteperComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'InscriptionQuotesDetail/:id',   component: InscriptionQuoteDetailComponent, canActivate:[IpGuard,AuthGuard] },\n  //ip\n  { path: 'ipslist',   component: IpAddressComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'ip-profile',   component: IpProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'ip-profile/:id',   component: IpProfileComponent, canActivate:[IpGuard,AuthGuard] },\n  { path: 'register',   component: IpRegisterComponent},\n  //notfound\n  { path: 'nopermission', component: NopermissionComponent},\n  //login\n  { path: 'login', component:LoginComponent}\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    UserProfileComponent,\n    LoginComponent,\n    MonumentComponent,\n    MonumentProfileComponent,\n    InstallationComponent,\n    InstallationProfileComponent,\n    InscriptionComponent,\n    InscriptionProfileComponent,\n    FoundationComponent,\n    FoundationProfileComponent,\n    AccessoriesComponent,\n    AccessoriesProfileComponent,\n    QuoteComponent,\n    DialogOverviewExampleDialog,\n    DialogOverviewExampleDialog1,\n    QuoteProfileComponent,\n    QuoteDetailComponent,\n    IpAddressComponent,\n    IpProfileComponent,\n    IpRegisterComponent,\n    NopermissionComponent,\n    QuoteStepperComponent,\n    CastingComponent,\n    CastingProfileComponent,\n    InscriptionQuoteComponent,\n    InscriptionQuoteSteperComponent,\n    InscriptionQuoteDetailComponent,\n    AdditionalInscriptionComponent,\n    AdditionalInscriptionProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(adminRoutes, { useHash: true }),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomFormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatStepperModule,\n  ],\n  providers: [\n    UsersService, \n    AuthService,\n    AuthGuard, \n    MonumentService, \n    InstallationService, \n    InscriptionService,\n    FoundationService,\n    AccessoriesService,\n    IpGuard,\n    IpServiceService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { MonumentService } from '../../services/monument.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InstallationService } from 'src/app/services/installation.service';\nimport { FoundationService } from 'src/app/services/foundation.service';\nimport { AccessoriesService } from 'src/app/services/accessories.service';\nimport { InscriptionService } from 'src/app/services/inscription.service';\nimport { CastingService } from 'src/app/services/casting.service';\nimport { element } from 'protractor';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { QuoteService } from 'src/app/services/quote.service';\n\n@Component({\n  selector: 'app-quote-stepper',\n  templateUrl: './quote-stepper.component.html',\n  styleUrls: ['./quote-stepper.component.css']\n})\nexport class QuoteStepperComponent implements OnInit {\n  monumentStyles = ['Lawn Wing Or OG', 'Single Wing Or OG', 'Double Wing Or OG', 'Other', 'Song He Yuan', 'Single Chapel',\n                    'Double Chapel', 'Single Cabinet', 'Double Cabinet', 'Single Asian Chapel', 'Double Asian Chapel',\n                    'Single Muslim',  'Double Muslim', 'Lawn Asian Chapel', 'Lawn Chapel', 'Carving', 'Book', 'Single Cabinet Chapel', 'Desktop',\n                    'Claim for Ledger', 'Renovation', 'Stock Ledger', 'Pet Monument', 'Triple Asian Chapel'];\n  colorList = [{ name: 'Black', displayName: 'Black' },\n  { name: 'Grey', displayName: 'Grey' },\n  { name: 'White', displayName: 'White' },\n  { name: 'Red', displayName: 'Red' },\n  { name: 'Other', displayName: 'Other Color' },];\n  sizeLists = ['0.15-0.35 Cubic', '0.35-0.91 Cubic', '0.91-1.7 Cubic'];\n  totalUsage = '';\n\n  inscriptionTypeList: string[] = ['English', 'Chinese', 'Arabic', 'Decoration'];\n  doorList;\n  currentQuote = {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    cemetary: \"\",\n    section: \"\",\n    monument: [],\n    installation: \"\",\n    additionalInstallation: [],\n    inscription: [],\n    casting:[],\n    foundation: \"\",\n    additionalFoundation: [],\n    accessories: [],\n    discount: 0,\n    note: \"\",\n    funeralProvider: \"\",\n    advertisement: \"\",\n    extraFee: 0,\n    permitFee: 0\n  };\n\n  customerFormGroup: FormGroup;\n  styleFormGroup: FormGroup;\n  permitFormGroup: FormGroup;\n  materialFormGroup: FormGroup;\n  inscriptionFormGroup: FormGroup;\n  photoFormGroup: FormGroup;\n  doorFormGroup: FormGroup;\n  accessoriesFormGroup: FormGroup;\n  castingFormGroup: FormGroup;\n  extraFeeFormGroup: FormGroup;\n  installationFormGroup: FormGroup;\n  foundationFormGroup: FormGroup;\n  discountFormGroup: FormGroup;\n\n  monumentCollection = [{}];\n  monumentNameCollection = [[]];\n  monumentSizeCollection = [];\n  monument_id = 0;\n\n  inscriptionList = [];\n  inscriptionCollection = [{\"inscriptionNumber\":0}];\n  inscriptionNameCollection = [[]]\n  inscription_id = 0;\n\n  castingCollection = [{}];\n  castingNameCollection = [];\n  castingSizeCollection = [[]];\n  casting_id = 0;\n\n  doorCollection = [{}];\n  doorNameCollection = [];\n  doorSizeCollection = [[]];\n  door_id = 0;\n\n  photoCollection = [{}];\n  photoNameCollection = [];\n  photoSizeCollection = [[]];\n  photo_id = 0;\n\n  accessoriesCollection = [{}];\n  accessoriesNameCollection = [];\n  accessoriesSizeCollection = [[]];\n  accessories_id = 0;\n\n  installationCollection = [];\n  additionalInstallationCollection = [];\n  deliveryCollection = [];\n\n  foundationCollection = []\n  additionalFoundationCollection = [];\n\n  constructor(private _formBuilder: FormBuilder,\n    private monumentService: MonumentService,\n    private inscriptionService: InscriptionService,\n    private accessoriesService: AccessoriesService,\n    private installationService: InstallationService,\n    private CastingService: CastingService,\n    private foundationService: FoundationService,\n    private authService: AuthService,\n    private quoteService: QuoteService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.customerFormGroup = this._formBuilder.group({\n      name: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: [''],\n      cemetery: [''],\n      section: [''],\n      funeralProvider: ['',Validators.required],\n      advertisement: ['',Validators.required],\n      row:[''],\n      grave_no:[''],\n    });\n    this.styleFormGroup = this._formBuilder.group({\n      monumentStyle: ['', Validators.required]\n    });\n\n    this.permitFormGroup = this._formBuilder.group({\n      permitFee: ['', Validators.required]\n    });\n\n    this.materialFormGroup = this._formBuilder.group({\n      totalUsage: ['',],\n      color0: ['',],\n      monument0: ['',],\n      size0: ['',],\n      number0: ['',],\n    });\n\n    this.inscriptionFormGroup = this._formBuilder.group({\n      inscriptionType0: ['',],\n      inscription0: ['',],\n      inscriptionNumber0: ['',],\n    });\n\n    this.doorFormGroup = this._formBuilder.group({\n      doorName0: ['',],\n      doorSize0: ['',],\n      doorNumber0: ['',]\n    })\n\n    this.photoFormGroup = this._formBuilder.group({\n      photoName0: ['',],\n      photoSize0: ['',],\n      photoNumber0: ['',]\n    })\n\n    this.accessoriesFormGroup = this._formBuilder.group({\n      accessoriesName0: ['',],\n      accessoriesSize0: ['',],\n      accessoriesNumber0: ['',]\n    })\n\n    this.castingFormGroup = this._formBuilder.group({\n      castingName0: ['',],\n      castingSize0: ['',],\n      castingNumber0: ['',]\n    })\n\n    this.installationFormGroup = this._formBuilder.group({\n      installation: ['',],\n      additionalInstallation: ['',],\n      delivery: ['',],\n    })\n\n    this.foundationFormGroup = this._formBuilder.group({\n      foundation: ['',],\n      additionalFoundation: ['',]\n    })\n\n    this.extraFeeFormGroup = this._formBuilder.group({\n      extraFee: ['', Validators.required]\n    });\n\n    this.extraFeeFormGroup = this._formBuilder.group({\n      extraFee: ['', Validators.required]\n    });\n\n    this.discountFormGroup = this._formBuilder.group({\n      discount: ['',]\n    })\n\n    let doorParams = '?accessoriesType=' + 'door';\n    this.accessoriesService.getAccessoriesByOther(doorParams).subscribe(result => {\n      result['data']['accessories'].forEach(element => {\n        if (!this.doorNameCollection.some(e => e.name == element.name)) {\n          this.doorNameCollection.push({ name: element.name, displayName: element.name, sizes: [{ size: element.size, _id: element._id }] })\n        }\n        else {\n          let accessIndex = this.doorNameCollection.findIndex(e => e.name == element.name);\n          if (accessIndex != -1) {\n            this.doorNameCollection[accessIndex].sizes.push({ size: element.size, _id: element._id })\n          }\n        }\n      })\n    })\n    let photoParams = '?accessoriesType=' + 'photo';\n    this.accessoriesService.getAccessoriesByOther(photoParams).subscribe(result => {\n      result['data']['accessories'].forEach(element => {\n        if (!this.photoNameCollection.some(e => e.name == element.name)) {\n          this.photoNameCollection.push({ name: element.name, displayName: element.name, sizes: [{ size: element.size, _id: element._id }] })\n        }\n        else {\n          let accessIndex = this.photoNameCollection.findIndex(e => e.name == element.name);\n          if (accessIndex != -1) {\n            this.photoNameCollection[accessIndex].sizes.push({ size: element.size, _id: element._id })\n          }\n        }\n      })\n    })\n    let accessoriesParams = '?accessoriesType=' + 'accessories';\n    this.accessoriesService.getAccessoriesByOther(accessoriesParams).subscribe(result => {\n      result['data']['accessories'].forEach(element => {\n        if (!this.accessoriesNameCollection.some(e => e.name == element.name)) {\n          this.accessoriesNameCollection.push({ name: element.name, displayName: element.name, sizes: [{ size: element.size, _id: element._id }] })\n        }\n        else {\n          let accessIndex = this.accessoriesNameCollection.findIndex(e => e.name == element.name);\n          if (accessIndex != -1) {\n            this.accessoriesNameCollection[accessIndex].sizes.push({ size: element.size, _id: element._id })\n          }\n        }\n      })\n    })\n\n\n    //installation and foundation\n    this.installationService.getAllInstallations().subscribe(result => {\n      result['data']['installation'].forEach(element => {\n        if (element.monumentType != 'Additional Charge' && element.monumentType != 'Delivery' ) {\n          this.installationCollection.push({ id: element._id, name: element.name })\n        }\n        else if (element.monumentType != 'Delivery' ) {\n          this.additionalInstallationCollection.push({ id: element._id, name: element.name })\n        }\n        else if (element.monumentType != 'Additional Charge'){\n          this.deliveryCollection.push({ id: element._id, name: element.name })\n        }\n      })\n    });\n    \n    this.CastingService.getAllCastings().subscribe(result=>{\n      result['data']['casting'].forEach(element=>{\n        if(!this.castingNameCollection.some(e=> e.name == element.name) ){\n          this.castingNameCollection.push({name:element.name, sizes:[{size:element.size, _id: element._id}]})\n        }\n        else{\n          let castingIndex = this.castingNameCollection.findIndex(e=>e.name == element.name);\n          if(castingIndex != -1){\n            this.castingNameCollection[castingIndex].sizes.push({size:element.size, _id: element._id})\n          }\n        }\n      })\n    })\n    this.foundationService.getAllFoundations().subscribe(result => {\n      result['data']['foundation'].forEach(element => {\n        if (element.type != 'Additional Charge') {\n          this.foundationCollection.push({ id: element._id, name: element.name })\n        }\n        else {\n          this.additionalFoundationCollection.push({ id: element._id, name: element.name })\n        }\n      })\n    });\n\n  }\n  //casting\n  addCasting(){\n    this.casting_id += 1;\n    this.castingFormGroup.addControl(('castingName' + this.casting_id), this._formBuilder.control(''));\n    this.castingFormGroup.addControl(('castingSize' + this.casting_id), this._formBuilder.control(''));\n    this.castingFormGroup.addControl(('castingNumber' + this.casting_id), this._formBuilder.control(''));\n    this.castingCollection.push([]);\n  }\n  removeCasting(index){\n    this.castingCollection.splice(index, 1);\n    this.castingSizeCollection.splice(index,1);\n  }\n\n  filterCastingSize(name,index){\n    //console.log(this.castingNameCollection.find(e => e.name == name))\n    this.castingSizeCollection[index] = [];\n    this.castingSizeCollection[index] = this.castingNameCollection.find(e => e.name == name).sizes;\n  }\n\n  //material part\n\n  filterTotalUsage(totalUsage){\n    let params = '?size=' + totalUsage; \n    this.monumentService.getMonumentByOther(params).subscribe(result => {\n      console.log(result)\n    })\n  }\n  getMonumentName(color, index) {\n    let params = '?color=' + color + '&size=' + this.totalUsage;\n    this.monumentService.getMonumentByOther(params).subscribe(result => {\n      result['data']['monuments'].forEach(element => {\n          this.monumentNameCollection[index].push({ name: element.englishName, displayName: element.englishName + \"/\" + element.chineseName, _id: element._id });\n      })\n    })\n  }\n\n  addMonument() {\n    this.monument_id += 1;\n    this.materialFormGroup.addControl(('color' + this.monument_id), this._formBuilder.control(''))\n    this.materialFormGroup.addControl(('monument' + this.monument_id), this._formBuilder.control(''))\n    this.materialFormGroup.addControl(('size' + this.monument_id), this._formBuilder.control(''))\n    this.materialFormGroup.addControl(('number' + this.monument_id), this._formBuilder.control(''))\n    this.monumentCollection.push({});\n    this.monumentNameCollection.push([]);\n  }\n\n  removeMonument(index) {\n    this.monumentCollection.splice(index, 1);\n    this.monumentNameCollection.splice(index, 1);\n  }\n\n  filterMonument(color, index) {\n    this.monumentNameCollection[index] = [];\n    this.getMonumentName(color, index);\n  }\n\n  // filterMonumentSize(name, index) {\n  //   this.monumentSizeCollection[index] = [];\n  //   this.monumentSizeCollection[index] = this.monumentNameCollection[index].find(e => e.name == name).sizes;\n  // }\n\n  //inscription part\n  filterInscription(type, index) {\n    this.inscriptionNameCollection[index] = [];\n    this.getInscription(type, index);\n  }\n\n  getInscription(type, index) {\n    let params = '?type=' + type;\n    this.inscriptionService.getInscriptionByOther(params).subscribe(result => {\n      result['data']['inscription'].forEach(element => {\n        this.inscriptionNameCollection[index].push({ name: element.name, _id: element._id });\n      })\n    })\n  }\n\n  addInscription() {\n    this.inscription_id += 1;\n    this.inscriptionFormGroup.addControl(('inscriptionType' + this.inscription_id), this._formBuilder.control(''));\n    this.inscriptionFormGroup.addControl(('inscription' + this.inscription_id), this._formBuilder.control(''));\n    this.inscriptionFormGroup.addControl(('inscriptionNumber' + this.inscription_id), this._formBuilder.control(''));\n    this.inscriptionCollection.push({\"inscriptionNumber\":0});\n  }\n\n  removeInscription(index) {\n    this.inscriptionCollection.splice(index, 1);\n  }\n\n  //door part\n  addDoor() {\n    this.door_id += 1;\n    this.doorFormGroup.addControl(('doorName' + this.door_id), this._formBuilder.control(''));\n    this.doorFormGroup.addControl(('doorSize' + this.door_id), this._formBuilder.control(''));\n    this.doorFormGroup.addControl(('doorNumber' + this.door_id), this._formBuilder.control(''));\n    this.doorCollection.push([]);\n    // console.log(this.doorSizeCollection);\n    // console.log(this.doorNameCollection);\n  }\n\n  removeDoor(index) {\n    this.doorCollection.splice(index, 1);\n  }\n\n  filterDoorSize(name, index) {\n    this.doorSizeCollection[index] = [];\n    this.doorSizeCollection[index] = this.doorNameCollection.find(e => e.name == name).sizes;\n    // console.log(this.doorSizeCollection);\n    // console.log(this.doorNameCollection);\n  }\n\n  //photo part\n  addPhoto() {\n    this.photo_id += 1;\n    this.photoFormGroup.addControl(('photoName' + this.photo_id), this._formBuilder.control(''));\n    this.photoFormGroup.addControl(('photoSize' + this.photo_id), this._formBuilder.control(''));\n    this.photoFormGroup.addControl(('photoNumber' + this.photo_id), this._formBuilder.control(''));\n    this.photoCollection.push([]);\n  }\n\n  removePhoto(index) {\n    this.photoCollection.splice(index, 1);\n  }\n\n  filterPhotoSize(name, index) {\n    this.photoSizeCollection[index] = [];\n    this.photoSizeCollection[index] = this.photoNameCollection.find(e => e.name == name).sizes;\n  }\n\n  //accessories part\n  addAccessories() {\n    this.accessories_id += 1;\n    this.accessoriesFormGroup.addControl(('accessoriesName' + this.accessories_id), this._formBuilder.control(''));\n    this.accessoriesFormGroup.addControl(('accessoriesSize' + this.accessories_id), this._formBuilder.control(''));\n    this.accessoriesFormGroup.addControl(('accessoriesNumber' + this.accessories_id), this._formBuilder.control(''));\n    this.accessoriesCollection.push([]);\n  }\n\n  removeAccessories(index) {\n    this.accessoriesCollection.splice(index, 1);\n  }\n\n  filterAccessoriesSize(name, index) {\n    this.accessoriesSizeCollection[index] = [];\n    this.accessoriesSizeCollection[index] = this.accessoriesNameCollection.find(e => e.name == name).sizes;\n  }\n\n\n\n  submitData() {\n    let customerData = this.customerFormGroup.value;\n    let monumentType = this.styleFormGroup.value;\n    let permitData = this.permitFormGroup.value;\n    let installationData = this.installationFormGroup.value;\n    let fondationData = this.foundationFormGroup.value;\n    let extraFeeData = this.extraFeeFormGroup.value;\n    let discountData = this.discountFormGroup.value;\n\n    let quoteData = { ...customerData, ...monumentType, ...permitData, ...installationData, ...fondationData, ...extraFeeData, ...discountData};\n    if(quoteData['delivery'].length != 0){\n      quoteData['delivery'].forEach(element=>{\n        quoteData['additionalInstallation'].push(element)\n      })\n      delete quoteData['delivery'];\n    }\n    quoteData.accessories = [];\n    quoteData.monument = [];\n    quoteData.inscription = [];\n    quoteData.casting =[];\n    if (this.accessoriesCollection[0]['accessoriesNumber'] != undefined && this.accessoriesCollection[0]['accessoriesId'] != undefined) {\n      this.accessoriesCollection.forEach(element => {\n        if (element['accessoriesNumber'] != undefined && element['accessoriesId'] != undefined) {\n          quoteData.accessories.push({\n            accessoriesId: element['accessoriesId'],\n            accessoriesNumber: element['accessoriesNumber']\n          })\n        }\n      })\n    }\n    if (this.photoCollection[0]['accessoriesNumber'] != undefined && this.photoCollection[0]['accessoriesId'] != undefined) {\n      this.photoCollection.forEach(element => {\n        if (element['accessoriesNumber'] != undefined && element['accessoriesId'] != undefined) {\n          quoteData.accessories.push({\n            accessoriesId: element['accessoriesId'],\n            accessoriesNumber: element['accessoriesNumber']\n          })\n        }\n      })\n    }\n    if (this.doorCollection[0]['accessoriesNumber'] != undefined && this.doorCollection[0]['accessoriesId'] != undefined) {\n      this.doorCollection.forEach(element => {\n        if (element['accessoriesNumber'] != undefined && element['accessoriesId'] != undefined) {\n          quoteData.accessories.push({\n            accessoriesId: element['accessoriesId'],\n            accessoriesNumber: element['accessoriesNumber']\n          })\n        }\n      })\n    }\n\n    if (this.monumentCollection[0]['number'] != undefined && this.monumentCollection[0]['name'] != undefined) {\n      this.monumentCollection.forEach(element => {\n        if (element['name'] != undefined && element['number'] != undefined) {\n          quoteData.monument.push({\n            monumentId: element['name'],\n            monumentNumber: element['number']\n          })\n        }\n      })\n    }\n    //console.log(this.castingCollection[0]['castingNumber'] != undefined)\n    if (this.castingCollection[0]['castingNumber'] != undefined && this.castingCollection[0]['castingId'] != undefined) {\n      //console.log(this.castingCollection[0]['castingNumber'], this.castingCollection[0]['castingId'])\n      this.castingCollection.forEach(element => {\n        if (element['castingId'] != undefined && element['castingNumber'] != undefined) {\n          quoteData.casting.push({\n            castingId: element['castingId'],\n            castingNumber: element['castingNumber']\n          })\n        }\n      })\n    }\n\n    if (this.inscriptionCollection[0]['inscriptionId'] != undefined && this.inscriptionCollection[0]['inscriptionNumber'] != undefined ) {\n      this.inscriptionCollection.forEach(element => {\n        if (element['inscriptionNumber'] != undefined && element['inscriptionId'] != undefined) {\n          quoteData.inscription.push({\n            inscriptionId: element['inscriptionId'],\n            inscriptionNumber: element['inscriptionNumber']\n          })\n        }\n      })\n    }\n    quoteData.staff = this.authService.currentUserId();\n    this.clean(quoteData);\n    //console.log(quoteData)\n    this.quoteService.checkPhone(quoteData.phone).subscribe(res=>{\n      if(res['status']== 'old'){\n        if(confirm('This Customer got a quote from ' + res['data']['name'])){\n          this.quoteService.createQuote(quoteData).subscribe((result)=>{\n            if(result['data']['quoteId']){\n              let quoteId = result['data']['quoteId']\n               this.router.navigate(['/quotedetail/' + quoteId])\n            }\n        });\n        }\n      }\n      else{\n        this.quoteService.createQuote(quoteData).subscribe((result)=>{\n          if(result['data']['quoteId']){\n            let quoteId = result['data']['quoteId']\n            this.router.navigate(['/quotedetail/' + quoteId])\n            console.log(quoteData);\n      }\n    })\n    return\n      }\n    })\n\n  }\n  clean(obj) {\n    for (var propName in obj) {\n      if (obj[propName] === \"\" || (Array.isArray(obj[propName]) && obj[propName].length == 0)) {\n        delete obj[propName];\n      }\n    }\n  }\n\n}\n","<mat-horizontal-stepper linear #stepper>\n    <mat-step [stepControl]=\"customerFormGroup\">\n        <form [formGroup]=\"customerFormGroup\">\n            <ng-template matStepLabel>Customer Information</ng-template>\n            <div class=\"middle-steper\">\n                <mat-form-field>\n                    <input formControlName=\"name\" matInput placeholder=\"Customer Name\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input formControlName=\"phone\" matInput placeholder=\"Phone\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input formControlName=\"email\" matInput placeholder=\"Email\" type=\"email\">\n                </mat-form-field>\n            </div>\n            <div class=\"middle-steper\">\n                <mat-form-field>\n                    <input formControlName=\"cemetery\" matInput placeholder=\"Cemetery\">\n                </mat-form-field>\n                <mat-form-field>\n                    <input formControlName=\"section\" matInput placeholder=\"Section\">\n                </mat-form-field>\n                <mat-form-field>\n                    <input formControlName=\"funeralProvider\" matInput placeholder=\"Funeral Provider\">\n                </mat-form-field>\n            </div>\n            <div class=\"middle-steper\">\n                <mat-form-field>\n                    <input formControlName=\"row\" matInput placeholder=\"Row\">\n                </mat-form-field>\n                <mat-form-field>\n                    <input formControlName=\"grave_no\" matInput placeholder=\"Grave No\">\n                </mat-form-field>\n                <mat-form-field>\n                    <input formControlName=\"advertisement\" matInput placeholder=\"How did you find us\">\n                </mat-form-field>\n\n            </div>\n            <!-- <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"firstCtrl\" placeholder=\"Last name, First name\" required>\n            </mat-form-field> -->\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"styleFormGroup\">\n        <form [formGroup]=\"styleFormGroup\">\n            <ng-template matStepLabel>Monument Style</ng-template>\n            <div class=\"middle-steper\">\n                <mat-form-field class=\"middle-steper\">\n                    <mat-label>Select Monument Style</mat-label>\n                    <mat-select formControlName=\"monumentStyle\">\n                        <mat-option></mat-option>\n                        <mat-option *ngFor=\"let option of monumentStyles\" [value]=\"option\">\n                            {{ option }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"permitFormGroup\">\n        <form [formGroup]=\"permitFormGroup\">\n            <ng-template matStepLabel>Permit</ng-template>\n            <div class=\"middle-steper\">\n                <mat-form-field>\n                    <input [(ngModel)]=\"currentQuote.permitFee\" formControlName=\"permitFee\" matInput\n                        placeholder=\"Permit Fee\" type=\"number\" min=\"0\" required>\n                </mat-form-field>\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"materialFormGroup\">\n        <form [formGroup]=\"materialFormGroup\">\n            <ng-template matStepLabel>Material</ng-template>\n            <mat-form-field class=\"example-full-width col-md-3\">\n                <mat-label>Total Usage of the Materials</mat-label>\n                <mat-select formControlName=\"totalUsage\" [(ngModel)]=\"totalUsage\">\n                    <mat-option>--</mat-option>\n                    <mat-option *ngFor=\"let size of sizeLists\" [value]=\"size\">\n                        {{ size }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"col-md-12\" *ngFor=\"let monument of monumentCollection; let i = index;\">\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <mat-label>-- Select Color --</mat-label>\n                    <mat-select [(ngModel)]=\"monument.color\" formControlName=\"color{{i}}\"\n                        (selectionChange)=\"filterMonument($event.value, i)\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let color of colorList\" [value]=\"color.name\">\n                            {{ color.displayName }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-4\">\n                    <mat-label>-- Select Material --</mat-label>\n                    <mat-select [(ngModel)]=\"monument.name\" formControlName=\"monument{{i}}\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let monumentName of monumentNameCollection[i]\" [value]=\"monumentName._id\">\n                            {{ monumentName.displayName }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                \n                <mat-form-field class=\"example-full-width col-md-1\">\n                    <input [(ngModel)]=\"monument.number\" formControlName=\"number{{i}}\" matInput placeholder=\"Material Usage\"\n                        type=\"number\" min=\"0\">\n                </mat-form-field>\n                <button mat-button *ngIf=\"monumentCollection.length!= 1\" type=\"button\" (click)=\"removeMonument(i)\">\n                    <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        remove_circle_outline</mat-icon>\n                </button>\n                <button mat-button *ngIf=\"i == (monumentCollection.length-1)\" type=\"button\" (click)=\"addMonument()\">\n                    <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        add_circle_outline</mat-icon>\n                </button>\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"inscriptionFormGroup\">\n        <form [formGroup]=\"inscriptionFormGroup\">\n            <ng-template matStepLabel>Inscription</ng-template>\n            <div class=\"col-md-12\" *ngFor=\"let inscription of inscriptionCollection; let i = index;\">\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <mat-label>-- Select Type --</mat-label>\n                    <mat-select [(ngModel)]=\"inscription.type\" formControlName=\"inscriptionType{{i}}\"\n                        (selectionChange)=\"filterInscription($event.value, i)\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let type of inscriptionTypeList\" [value]=\"type\">\n                            {{ type }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-6\">\n                    <mat-label>-- Select Inscription --</mat-label>\n                    <mat-select [(ngModel)]=\"inscription.inscriptionId\" formControlName=\"inscription{{i}}\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let singleInscription of inscriptionNameCollection[i]\"\n                            [value]=\"singleInscription._id\">\n                            {{ singleInscription.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <input [(ngModel)]=\"inscription.inscriptionNumber\" formControlName=\"inscriptionNumber{{i}}\" matInput\n                        placeholder=\"Number\" type=\"number\">\n                </mat-form-field>\n                <button mat-button *ngIf=\"inscriptionCollection.length != 1 \" type=\"button\"\n                    (click)=\"removeInscription(i)\">\n                    <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        remove_circle_outline</mat-icon>\n                </button>\n                <button mat-button *ngIf=\"i == (inscriptionCollection.length - 1)\" type=\"button\"\n                    (click)=\"addInscription()\">\n                    <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        add_circle_outline</mat-icon>\n                </button>\n\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"photoFormGroup\">\n        <form [formGroup]=\"photoFormGroup\">\n            <ng-template matStepLabel>Photo</ng-template>\n            <div class=\"col-md-12\" *ngFor=\"let photo of photoCollection; let i = index;\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Photo Type --</mat-label>\n                    <mat-select [(ngModel)]=\"photo.name\" formControlName=\"photoName{{i}}\"\n                        (selectionChange)=\"filterPhotoSize($event.value, i)\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let element of photoNameCollection\" [value]=\"element.name\">\n                            {{ element.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <mat-label>-- Select Size --</mat-label>\n                    <mat-select [(ngModel)]=\"photo.accessoriesId\" formControlName=\"photoSize{{i}}\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let photoSize of photoSizeCollection[i]\" [value]=\"photoSize._id\">\n                            {{ photoSize.size }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <input [(ngModel)]=\"photo.accessoriesNumber\" formControlName=\"photoNumber{{i}}\" matInput\n                        placeholder=\"Number\" type=\"number\">\n                </mat-form-field>\n                <button mat-button *ngIf=\"photoCollection.length != 1 \" type=\"button\" (click)=\"removePhoto(i)\">\n                    <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        remove_circle_outline</mat-icon>\n                </button>\n                <button mat-button *ngIf=\"i == (photoCollection.length - 1)\" type=\"button\" (click)=\"addPhoto()\">\n                    <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        add_circle_outline</mat-icon>\n                </button>\n\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"doorFormGroup\">\n        <form [formGroup]=\"doorFormGroup\">\n            <ng-template matStepLabel>Door</ng-template>\n            <div class=\"col-md-12\" *ngFor=\"let door of doorCollection; let i = index;\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Door Type --</mat-label>\n                    <mat-select [(ngModel)]=\"door.name\" formControlName=\"doorName{{i}}\"\n                        (selectionChange)=\"filterDoorSize($event.value, i)\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let element of doorNameCollection\" [value]=\"element.name\">\n                            {{ element.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <mat-label>-- Select Size --</mat-label>\n                    <mat-select [(ngModel)]=\"door.accessoriesId\" formControlName=\"doorSize{{i}}\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let doorSize of doorSizeCollection[i]\" [value]=\"doorSize._id\">\n                            {{ doorSize.size }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <input [(ngModel)]=\"door.accessoriesNumber\" formControlName=\"doorNumber{{i}}\" matInput\n                        placeholder=\"Number\" type=\"number\">\n                </mat-form-field>\n                <button mat-button *ngIf=\"doorCollection.length != 1 \" type=\"button\" (click)=\"removeDoor(i)\">\n                    <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        remove_circle_outline</mat-icon>\n                </button>\n                <button mat-button *ngIf=\"i == (doorCollection.length - 1)\" type=\"button\" (click)=\"addDoor()\">\n                    <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        add_circle_outline</mat-icon>\n                </button>\n\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"accessoriesFormGroup\">\n        <form [formGroup]=\"accessoriesFormGroup\">\n            <ng-template matStepLabel>Accessories</ng-template>\n            <div class=\"col-md-12\" *ngFor=\"let accessories of accessoriesCollection; let i = index;\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Accessories Type --</mat-label>\n                    <mat-select [(ngModel)]=\"accessories.name\" formControlName=\"accessoriesName{{i}}\"\n                        (selectionChange)=\"filterAccessoriesSize($event.value, i)\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let element of accessoriesNameCollection\" [value]=\"element.name\">\n                            {{ element.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <mat-label>-- Select Size --</mat-label>\n                    <mat-select [(ngModel)]=\"accessories.accessoriesId\" formControlName=\"accessoriesSize{{i}}\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let accessoriesSize of accessoriesSizeCollection[i]\"\n                            [value]=\"accessoriesSize._id\">\n                            {{ accessoriesSize.size }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width col-md-2\">\n                    <input [(ngModel)]=\"accessories.accessoriesNumber\" formControlName=\"accessoriesNumber{{i}}\" matInput\n                        placeholder=\"Number\" type=\"number\">\n                </mat-form-field>\n                <button mat-button *ngIf=\"accessoriesCollection.length != 1 \" type=\"button\"\n                    (click)=\"removeAccessories(i)\">\n                    <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        remove_circle_outline</mat-icon>\n                </button>\n                <button mat-button *ngIf=\"i == (accessoriesCollection.length - 1)\" type=\"button\"\n                    (click)=\"addAccessories()\">\n                    <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                        add_circle_outline</mat-icon>\n                </button>\n\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"castingFormGroup\">\n            <form [formGroup]=\"castingFormGroup\">\n                <ng-template matStepLabel>Casting</ng-template>\n                <div class=\"col-md-12\" *ngFor=\"let casting of castingCollection; let i = index;\">\n                    <mat-form-field class=\"col-md-6\">\n                        <mat-label>-- Select casting --</mat-label>\n                        <mat-select [(ngModel)]=\"casting.name\" formControlName=\"castingName{{i}}\"\n                            (selectionChange)=\"filterCastingSize($event.value, i)\">\n                            <mat-option>--</mat-option>\n                            <mat-option *ngFor=\"let element of castingNameCollection\" [value]=\"element.name\">\n                                {{ element.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"example-full-width col-md-2\">\n                        <mat-label>-- Select Size --</mat-label>\n                        <mat-select [(ngModel)]=\"casting.castingId\" formControlName=\"castingSize{{i}}\">\n                            <mat-option>--</mat-option>\n                            <mat-option *ngFor=\"let castingSize of castingSizeCollection[i]\"\n                                [value]=\"castingSize._id\">\n                                {{ castingSize.size }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"example-full-width col-md-2\">\n                        <input [(ngModel)]=\"casting.castingNumber\" formControlName=\"castingNumber{{i}}\" matInput\n                            placeholder=\"Quantity\" type=\"number\">\n                    </mat-form-field>\n                    <button mat-button *ngIf=\"castingCollection.length != 1 \" type=\"button\"\n                        (click)=\"removeCasting(i)\">\n                        <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                            remove_circle_outline</mat-icon>\n                    </button>\n                    <button mat-button *ngIf=\"i == (castingCollection.length - 1)\" type=\"button\"\n                        (click)=\"addCasting()\">\n                        <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">\n                            add_circle_outline</mat-icon>\n                    </button>\n    \n                </div>\n                <div>\n                    <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                    <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n                </div>\n            </form>\n        </mat-step>\n    <mat-step [stepControl]=\"installationFormGroup\">\n        <form [formGroup]=\"installationFormGroup\">\n            <ng-template matStepLabel>Installation</ng-template>\n            <div class=\"col-md-8\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Installation --</mat-label>\n                    <mat-select formControlName=\"installation\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let installation of installationCollection\" [value]=\"installation.id\">\n                            {{ installation.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-md-8\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Additional Installation --</mat-label>\n                    <mat-select multiple formControlName=\"additionalInstallation\">\n                        <mat-option *ngFor=\"let additionalInstallation of additionalInstallationCollection\"\n                            [value]=\"additionalInstallation.id\">\n                            {{ additionalInstallation.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-8\">\n                    <mat-form-field class=\"col-md-6\">\n                        <mat-label>-- Select Delivery --</mat-label>\n                        <mat-select multiple formControlName=\"delivery\">\n                            <mat-option *ngFor=\"let delivery of deliveryCollection\"\n                                [value]=\"delivery.id\">\n                                {{ delivery.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Next</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"foundationFormGroup\">\n        <form [formGroup]=\"foundationFormGroup\">\n            <ng-template matStepLabel>Foundation</ng-template>\n            <div class=\"col-md-8\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Foundation --</mat-label>\n                    <mat-select formControlName=\"foundation\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let foundation of foundationCollection\" [value]=\"foundation.id\">\n                            {{ foundation.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-md-8\">\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>-- Select Additional Foundation --</mat-label>\n                    <mat-select multiple formControlName=\"additionalFoundation\">\n                        <mat-option *ngFor=\"let additionalFoundation of additionalFoundationCollection\"\n                            [value]=\"additionalFoundation.id\">\n                            {{ additionalFoundation.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"extraFeeFormGroup\">\n        <form [formGroup]=\"extraFeeFormGroup\">\n            <ng-template matStepLabel>Extra Fee</ng-template>\n            <div class=\"middle-steper\">\n                <mat-form-field>\n                    <input [(ngModel)]=\"currentQuote.extraFee\" formControlName=\"extraFee\" matInput\n                        placeholder=\"Extra Fee\" type=\"number\" min=\"0\" required>\n                </mat-form-field>\n            </div>\n            <div>\n                <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"discountFormGroup\">\n            <form [formGroup]=\"discountFormGroup\">\n                <ng-template matStepLabel>Discount</ng-template>\n                <div class=\"middle-steper\">\n                    <mat-form-field>\n                        <input [(ngModel)]=\"currentQuote.discount\" formControlName=\"discount\" matInput\n                            placeholder=\"Discount(%)\" type=\"number\" min=\"0\" required> \n                    </mat-form-field>\n                </div>\n                <div>\n                    <button style=\"float: right;\" mat-button matStepperNext>Next</button>\n                    <button style=\"float: right;\" mat-button matStepperPrevious>Back</button>\n                </div>\n            </form>\n        </mat-step>\n\n\n    <mat-step>\n        <ng-template matStepLabel>Done</ng-template>\n        <p>You have completed the quotation form</p>\n        <div>\n            <button style=\"float: right;\" mat-button (click)=\"stepper.reset()\">Reset</button>\n            <button style=\"float: right;\" mat-button type=\"button\" (click)=\"submitData()\">Submit</button>\n        </div>\n    </mat-step>\n</mat-horizontal-stepper>","import { Component, OnInit } from '@angular/core';\nimport { CastingService } from '../../services/casting.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-casting-profile',\n  templateUrl: './casting-profile.component.html',\n  styleUrls: ['./casting-profile.component.css']\n})\nexport class CastingProfileComponent implements OnInit {\n  currentCasting =  {name:\"\",size:\"\",price:0};\n  id;\n\n  constructor(private castingService: CastingService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.castingService.getCasting(this.id).subscribe(result=>{\n         //console.log(result['data']['casting']);\n          this.currentCasting =result['data']['casting'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newCasting){\n    if(this.id) {\n      this.castingService.updateCasting(this.id,newCasting).subscribe(result=>{\n        this.router.navigate(['/castingslist'])\n      });\n    }\n    else{\n        this.castingService.createCasting(newCasting).subscribe(result=>{\n          this.router.navigate(['/castingslist'])\n    });\n      \n    }\n  }\n\n  deleteCasting(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.castingService.deleteCasting(this.id).subscribe(result=>{\n        this.router.navigate(['/castingslist'])\n      });\n    }\n    return\n  }\n\n}\n","<div class=\"main-content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header card-header-danger\">\n                            <h4 class=\"card-title\">Edit Casting</h4>\n                        </div>\n                        \n                        <div class=\"card-body\">\n                            <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-8\">\n                                        <mat-form-field class=\"example-full-width\">\n                                          <input #name=\"ngModel\" [(ngModel)]=\"currentCasting.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                        </mat-form-field>\n                                        <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                            Name is <strong>required</strong>\n                                        </mat-error>\n                                    </div>\n                    \n                                    <div class=\"col-md-8\">\n                                            <mat-form-field class=\"example-full-width\">\n                                              <input #size=\"ngModel\" [(ngModel)]=\"currentCasting.size\" name=\"size\" matInput placeholder=\"Size\" required>\n                                            </mat-form-field>\n                                            <mat-error *ngIf=\"size.touched && size.invalid && size.errors.required\">\n                                                Size is <strong>required</strong>\n                                            </mat-error>\n                                        </div>\n    \n                                    <div class=\"col-md-8\">\n                                        <mat-form-field class=\"example-full-width\">\n                                          <input #price=\"ngModel\" [(ngModel)]=\"currentCasting.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                        </mat-form-field>\n                                        <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                            Price is <strong>required</strong>\n                                        </mat-error>\n                                    </div>\n                                </div>\n                                <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Casting</button>\n                                <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Casting</button>\n                                <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteCasting()\">Delete Casting</button>\n                                \n                                <div class=\"clearfix\"></div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n    ","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { MonumentService } from '../../services/monument.service';\n\nimport { Router, ActivatedRoute } from '@angular/router';\n\nexport interface MonumentData {\n  englishName: string;\n  chineseName: string;\n  color: string;\n  origin: string;\n  size: string;\n  price: number\n};\n\n@Component({\n  selector: 'app-monument',\n  templateUrl: './monument.component.html',\n  styleUrls: ['./monument.component.css']\n})\nexport class MonumentComponent implements AfterViewInit {\n  totalPriceDiscount = 0;\n  displayedColumns: string[] = ['englishName', 'chineseName', 'color', 'origin', 'size', 'price', 'currentPrice', 'edit'];\n  dataSource: MatTableDataSource<MonumentData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private monumentService: MonumentService,\n    private router: Router) {\n    this.monumentService.getMateiralDiscount().subscribe(result => {\n      this.totalPriceDiscount = result['data']['materialDiscount']['materialDiscount']\n    })\n    this.monumentService.getAllMonuments().subscribe((result) => {\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"monuments\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  updateDiscount() {\n    if (confirm('Are you sure you want to update total discount?')) {\n      this.monumentService.updateMateiralDiscount({\n        materialDiscount: this.totalPriceDiscount\n      }).subscribe(result => {\n        this.router.navigate(['/monumentslist'])\n      })\n    }\n    return\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Monument Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/monument-profile/']\">New Monument</button>   \n                        <div class=\"discount\">\n                          Current Price Discount:\n                          <input  [(ngModel)]=\"totalPriceDiscount\" type=\"number\" max=\"100\" min=\"0\"> %\n                          <button mat-raised-button color=\"warn\" (click)=\"updateDiscount()\" >Update Discount</button> \n                        </div>  \n                    </div>\n                   \n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name origin or size\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"englishName\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.englishName}} </td>\n                              </ng-container>\n                              <!-- Chinese Name Column -->\n                              <ng-container matColumnDef=\"chineseName\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Chinese Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.chineseName}} </td>\n                              </ng-container>\n\n                              <!-- Color Column -->\n                              <ng-container matColumnDef=\"color\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.color}} </td>\n                              </ng-container>\n                          \n                              <!-- Origin Column -->\n                              <ng-container matColumnDef=\"origin\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Origin </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.origin}} </td>\n                              </ng-container>\n\n                              <!-- Size Column -->\n                              <ng-container matColumnDef=\"size\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Size </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.size}} </td>\n                              </ng-container>\n\n                              <!-- Price Column -->\n                              <ng-container matColumnDef=\"price\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Standard Price </th>\n                                <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"currentPrice\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header>Current Price </th>\n                                  <td mat-cell *matCellDef=\"let row\"> ${{row.price * totalPriceDiscount/100}} </td>\n                                </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/monument-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { FoundationService } from '../../services/foundation.service';\n\n\nexport interface FoundationData{\n  name: string;\n  description: string;\n  price:number\n};\n\n@Component({\n  selector: 'app-foundation',\n  templateUrl: './foundation.component.html',\n  styleUrls: ['./foundation.component.css']\n})\nexport class FoundationComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'description', 'price', 'edit'];\n  dataSource: MatTableDataSource<FoundationData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private foundationService: FoundationService) {\n    this.foundationService.getAllFoundations().subscribe((result)=>{\n      console.log(result);\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"foundation\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Foundation Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/foundation-profile/']\">New Foundation</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name type\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"name\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                              </ng-container>\n                          \n                              <!-- Description Column -->\n                              <ng-container matColumnDef=\"description\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\n                              </ng-container>\n\n                              <!-- Price Column -->\n                              <ng-container matColumnDef=\"price\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                                <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/foundation-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter {{input.value}}</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { IpServiceService } from '../../services/ip-service.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-ip-register',\n  templateUrl: './ip-register.component.html',\n  styleUrls: ['./ip-register.component.css']\n})\nexport class IpRegisterComponent implements OnInit {\n  currentIp =  {location:\"\",ip:\"\", email:\"\", password:\"\"};\n  constructor(private ipService: IpServiceService,\n              private router: Router) {\n    this.ipService.getIPAddress().subscribe(res=>{\n      this.currentIp.ip = res['ip'];\n      console.log(this.currentIp);\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  save(newIpAddress){\n    console.log(newIpAddress);\n    this.ipService.registerIpAddress(newIpAddress).subscribe(result=>{\n          this.router.navigate(['/'])\n    });\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">IP Register</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <input #ip=\"ngModel\" [(ngModel)]=\"currentIp.ip\" name=\"ip\" matInput placeholder=\"IP\" required>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #location=\"ngModel\" [(ngModel)]=\"currentIp.location\" name=\"location\" matInput placeholder=\"Location\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"location.touched && location.invalid && location.errors.required\">\n                                        Location is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <input #email=\"ngModel\" [(ngModel)]=\"currentIp.email\" name=\"email\" matInput placeholder=\"Email\" required>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <input #password=\"ngModel\" [(ngModel)]=\"currentIp.password\" name=\"password\" matInput placeholder=\"Password\" type=\"password\" required>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" [disabled]=\"f.invalid\">Register IP Address</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { MonumentService } from '../../services/monument.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InstallationService } from 'src/app/services/installation.service';\nimport { FoundationService } from 'src/app/services/foundation.service';\nimport { AccessoriesService } from 'src/app/services/accessories.service';\nimport { InscriptionService } from 'src/app/services/inscription.service';\nimport { element } from 'protractor';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { QuoteService } from 'src/app/services/quote.service';\n\n\n@Component({\n  selector: 'app-quote-profile',\n  templateUrl: './quote-profile.component.html',\n  styleUrls: ['./quote-profile.component.css']\n})\nexport class QuoteProfileComponent implements OnInit {\n  colorList = [{name:'Black', displayName:'Black'},\n               {name:'Grey', displayName:'Grey'},\n               {name:'White', displayName:'White'},\n               {name:'Red', displayName:'Red'},\n               {name:'Other', displayName:'Other Color'},]\n  accessoriesTypeList: string[] = ['accessories', 'door', 'photo', 'other'];\n  inscriptionTypeList: string[] = ['In Yard', 'Asian']\n  currentQuote =  {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    cemetary: \"\",\n    section: \"\",\n    monument: [],\n    installation:\"\",\n    additionalInstallation:[],\n    inscription:[],\n    foundation: \"\",\n    additionalFoundation:[],\n    accessories: [],\n    discount: 0,\n    note:\"\",\n    funeralProvider:\"\",\n    advertisement:\"\",\n    extraFee:0,\n    permitFee:0\n  };\n\n  monumentCollection=[{}];\n  monumentNameCollection =[[]];\n  monumentSizeCollection = [];\n  monument_id = 0;\n\n\n  installationCollection=[];\n  additionalInstallationCollection=[];\n  foundationCollection =[]\n  additionalFoundationCollection=[];\n  \n\n  accessoriesCollection =[{}];\n  accessoriesNameCollection=[[]]\n  accessoriesSizeCollection = [[]];\n  accessories_id = 0;\n\n  inscriptionList = [];\n  inscriptionCollection = [{}];\n  inscriptionNameCollection = [[]]\n  inscription_id = 0;\n\n  constructor(private monumentService: MonumentService,\n              private installationService: InstallationService,\n              private foundationService: FoundationService,\n              private accessoriesService: AccessoriesService,\n              private inscriptionService: InscriptionService,\n              private authService: AuthService,\n              private quoteService: QuoteService,\n              private router: Router,) {\n    this.installationService.getAllInstallations().subscribe(result =>{\n      result['data']['installation'].forEach(element => {\n        if(element.monumentType != 'Additional Charge'){\n          this.installationCollection.push({id:element._id, name: element.name})\n        }\n        else{\n          this.additionalInstallationCollection.push({id:element._id, name: element.name})\n        }\n      })\n    });\n\n    this.foundationService.getAllFoundations().subscribe(result =>{\n      result['data']['foundation'].forEach(element => {\n        if(element.type != 'Additional Charge'){\n          this.foundationCollection.push({id:element._id, name: element.name})\n        }\n        else{\n          this.additionalFoundationCollection.push({id:element._id, name: element.name})\n        }\n      })\n    });\n    \n    this.inscriptionService.getAllInscriptions().subscribe(result=>{\n      result['data']['inscription'].forEach(element=>{\n        this.inscriptionList.push({id:element._id, name:element.name})\n      })\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  getMonumentName(color, index){\n    let params = '?color=' + color;\n    this.monumentService.getMonumentByOther(params).subscribe(result=>{\n      result['data']['monuments'].forEach(element => {\n        if(!this.monumentNameCollection[index].some(e=>e.name == element.englishName)){\n          this.monumentNameCollection[index].push({name:element.englishName, displayName: element.englishName + \"/\" + element.chineseName, sizes: [{size: element.size, _id:element._id}]});\n        }\n        else{\n          let monumentIndex = this.monumentNameCollection[index].findIndex(e=>e.name == element.englishName);\n          if(monumentIndex != -1){\n            this.monumentNameCollection[index][monumentIndex].sizes.push({size: element.size, _id:element._id});\n          }\n        }\n      })\n    })\n  }\n\n  addMonument(){\n    this.monumentCollection.push({});\n    this.monumentNameCollection.push([]);\n    this.monument_id += 1;\n  }\n\n  removeMonument(index){\n    this.monumentCollection.splice(index,1);\n    this.monumentNameCollection.splice(index,1);\n  }\n\n  getAccessoriesName(type,index){\n    let params = '?accessoriesType=' + type;\n    this.accessoriesService.getAccessoriesByOther(params).subscribe(result=>{\n      result['data']['accessories'].forEach(element=>{\n        if(!this.accessoriesNameCollection[index].some(e=>e.name == element.name)){\n          this.accessoriesNameCollection[index].push({name:element.name, displayName:element.name, sizes: [{size: element.size, _id:element._id}]})\n        }\n        else{\n          let accessIndex = this.accessoriesNameCollection[index].findIndex(e=>e.name == element.name);\n          if(accessIndex != -1){\n            this.accessoriesNameCollection[index][accessIndex].sizes.push({size: element.size, _id:element._id})\n          }\n        }\n      })\n    })\n  };\n\n  filterMonument(color,index){\n    this.monumentNameCollection[index] = [];\n    this.getMonumentName(color,index);\n  }\n\n  filterMonumentSize(name,index){\n    this.monumentSizeCollection[index] = [];\n    this.monumentSizeCollection[index] = this.monumentNameCollection[index].find(e=>e.name == name).sizes;\n  }\n\n  addAccessories(){\n    this.accessoriesCollection.push([]);\n    this.accessoriesNameCollection.push([]);\n    this.accessories_id += 1;\n  }\n\n  removeAccessories(index){\n    this.accessoriesCollection.splice(index,1);\n    this.accessoriesNameCollection.splice(index,1);\n  }\n\n  filterAccessories(type, index){\n    this.accessoriesNameCollection[index] = [];\n    this.getAccessoriesName(type,index);\n  }\n\n  filterAccessoriesSize(name, index){\n    this.accessoriesSizeCollection[index] = [];\n    this.accessoriesSizeCollection[index] = this.accessoriesNameCollection[index].find(e=>e.name==name).sizes;\n  }\n\n  filterInscription(type, index){\n    this.inscriptionNameCollection[index] = [];\n    this.getInscription(type,index);\n  }\n\n  getInscription(type, index){\n    let params = '?type=' + type;\n    this.inscriptionService.getInscriptionByOther(params).subscribe(result=>{\n      result['data']['inscription'].forEach(element => {\n        this.inscriptionNameCollection[index].push({name: element.name, _id:element._id});\n      })\n    })\n  }\n\n  addInscription(){\n    this.inscriptionCollection.push({});\n    this.inscription_id += 1;\n  }\n\n  removeInscription(index){\n    this.inscriptionCollection.splice(index,1);\n  }\n\n  save(value){\n    let formData =  {\n      name: value.name,\n      phone: value.phone,\n      email: value.email,\n      cemetary: value.cemetary,\n      section: value.section,\n      monument: [],\n      installation:value.installation,\n      additionalInstallation:value.additionalInstallation,\n      inscription:[],\n      foundation: value.foundation,\n      additionalFoundation:value.additionalFoundation,\n      accessories: [],\n      staff:\"\",\n      discount: value.discount,\n      note: value.note,\n      advertisement: value.advertisement,\n      funeralProvider:value.funeralProvider,\n      extraFee: value.extraFee,\n      permitFee: value.permitFee\n    }\n    if(this.accessoriesCollection[0]['size'] != undefined){\n      this.accessoriesCollection.forEach(element=>{\n        if(element['size'] != undefined){\n          formData.accessories.push({\n            accessoriesId:element['size'],\n            accessoriesNumber: element['number']\n          })\n      }\n      })\n    }\n\n    if(this.monumentCollection[0]['size'] != undefined){\n      this.monumentCollection.forEach(element=>{\n        console.log(element);\n        if(element['size'] != undefined){\n          formData.monument.push({\n            monumentId:element['size'],\n            monumentNumber: element['number']\n          })\n      }\n      })\n    }\n\n    if(this.inscriptionCollection[0]['inscriptionId'] != undefined){\n      formData.inscription = this.inscriptionCollection.filter(e=>{\n        if(Object.keys(e).length ===0)\n          return false;\n        else return true;\n      });\n    }\n    formData.staff = this.authService.currentUserId();\n    this.clean(formData);\n    this.quoteService.checkPhone(formData.phone).subscribe(res=>{\n      if(res['status']== 'old'){\n        if(confirm('This Customer got a quote from ' + res['data']['name'])){\n          this.quoteService.createQuote(formData).subscribe((result)=>{\n            if(result['data']['quoteId']){\n              let quoteId = result['data']['quoteId']\n               this.router.navigate(['/quotedetail/' + quoteId])\n            }\n        });\n        console.log(formData);\n        }\n      }\n      else{\n        this.quoteService.createQuote(formData).subscribe((result)=>{\n          if(result['data']['quoteId']){\n            let quoteId = result['data']['quoteId']\n            this.router.navigate(['/quotedetail/' + quoteId])\n            console.log(formData);\n      }\n    })\n    return\n      }\n    })\n  }\n\nclean(obj) {\n  for (var propName in obj) { \n    if (obj[propName] === \"\" || (Array.isArray(obj[propName]) && obj[propName].length==0)) {\n      delete obj[propName];\n    }\n  }\n}\n}","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Get A Quote</h2>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <h3 class=\"card-title\">Customer Information</h3>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentQuote.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                                \n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #phone=\"ngModel\" [(ngModel)]=\"currentQuote.phone\" name=\"phone\" matInput placeholder=\"Phone\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"phone.touched && phone.invalid && phone.errors.required\">\n                                        Phone number is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-4\">\n                                        <mat-form-field class=\"example-full-width\">\n                                          <input #email=\"ngModel\" [(ngModel)]=\"currentQuote.email\" name=\"email\" matInput placeholder=\"Email\" type=\"email\">\n                                        </mat-form-field>\n                                </div>\n\n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #cemetary=\"ngModel\" [(ngModel)]=\"currentQuote.cemetary\" name=\"cemetary\" matInput placeholder=\"Cemetery\" required>\n                                    </mat-form-field>\n                                </div>\n                \n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #section=\"ngModel\" [(ngModel)]=\"currentQuote.section\" name=\"section\" matInput placeholder=\"Section\" required>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-4\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input #funeralProvider=\"ngModel\" [(ngModel)]=\"currentQuote.funeralProvider\" name=\"funeralProvider\" matInput placeholder=\"Funeral Provider\" required>\n                                  </mat-form-field>\n                              </div>\n                                <div class=\"col-md-12\">\n                                        <h3 class=\"card-title\">Monument Information</h3>\n                                </div>\n                                <div class=\"col-md-12\" *ngFor=\"let monument of monumentCollection; let i = index;\">\n                                  <mat-form-field class=\"example-full-width col-md-2\">\n                                        <mat-label>-- Select Color --</mat-label>\n                                          <mat-select [(ngModel)]=\"monument.color\" name=\"monumentColor_{{monument_id+i}}\" (selectionChange)=\"filterMonument($event.value, i)\">\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let color of colorList\" [value]=\"color.name\">\n                                              {{ color.displayName }}\n                                            </mat-option>\n                                          </mat-select>\n                                  </mat-form-field>\n                                  <mat-form-field class=\"example-full-width col-md-4\">\n                                        <mat-label>-- Select Monument --</mat-label>\n                                          <mat-select [(ngModel)]=\"monument.name\" name=\"monumentName_{{monument_id+i}}\" (selectionChange)=\"filterMonumentSize($event.value, i)\">\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let monumentName of monumentNameCollection[i]\" [value]=\"monumentName.name\">\n                                              {{ monumentName.displayName }}\n                                            </mat-option>\n                                          </mat-select>\n                                  </mat-form-field>\n                                  <mat-form-field class=\"example-full-width col-md-3\">\n                                        <mat-label>-- Select Size --</mat-label>\n                                          <mat-select [(ngModel)]=\"monument.size\" name=\"monumentSize{{monument_id+i}}\" >\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let size of monumentSizeCollection[i]\" [value]=\"size._id\">\n                                              {{ size.size }}\n                                            </mat-option>\n                                          </mat-select>\n                                  </mat-form-field>\n                                  <mat-form-field class=\"example-full-width col-md-1\">\n                                    <input [(ngModel)]=\"monument.number\" name=\"monumentNumber_{{monument_id+i}}\" matInput placeholder=\"Real Size\" type=\"number\" min=\"0\">\n                                </mat-form-field>\n                                <button mat-button *ngIf=\"monumentCollection.length!= 1\" type=\"button\" (click)=\"removeMonument(i)\">\n                                  <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">remove_circle_outline</mat-icon>\n                                </button>\n                                <button mat-button *ngIf=\"i == (monumentCollection.length-1)\" type=\"button\" (click)=\"addMonument()\">\n                                  <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">add_circle_outline</mat-icon>\n                                </button>\n                              </div>\n\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Installation --</mat-label>\n                                          <mat-select ngModel name=\"installation\" >\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let installation of installationCollection\" [value]=\"installation.id\">\n                                              {{ installation.name }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Additional Installation --</mat-label>\n                                          <mat-select ngModel  multiple name=\"additionalInstallation\" >\n                                            <mat-option *ngFor=\"let additionalInstallation of additionalInstallationCollection\" [value]=\"additionalInstallation.id\">\n                                              {{ additionalInstallation.name }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Foundation --</mat-label>\n                                          <mat-select ngModel name=\"foundation\" >\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let foundation of foundationCollection\" [value]=\"foundation.id\">\n                                              {{ foundation.name }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Additional Foundation --</mat-label>\n                                          <mat-select ngModel multiple name=\"additionalFoundation\" >\n                                            <mat-option *ngFor=\"let additionalFoundation of additionalFoundationCollection\" [value]=\"additionalFoundation.id\">\n                                              {{ additionalFoundation.name }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-12\">\n                                        <h3 class=\"card-title\">Inscription</h3>\n                                </div>\n                                <div class=\"col-md-12\" *ngFor=\"let inscription of inscriptionCollection; let i = index;\" >\n                                    <mat-form-field class=\"example-full-width col-md-2\">\n                                        <mat-label>-- Select Type --</mat-label>\n                                          <mat-select [(ngModel)]=\"inscription.type\" name=\"inscriptionType_{{ inscription_id +i}}\" (selectionChange)=\"filterInscription($event.value, i)\" >\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let type of inscriptionTypeList\" [value]=\"type\">\n                                              {{ type }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                        <mat-form-field class=\"example-full-width col-md-6\">\n                                            <mat-label>-- Select Inscription --</mat-label>\n                                              <mat-select [(ngModel)]=\"inscription.inscriptionId\" name=\"inscriptionType_{{ inscription_id +i}}\" >\n                                                <mat-option>--</mat-option>\n                                                <mat-option *ngFor=\"let singleInscription of inscriptionNameCollection[i]\" [value]=\"singleInscription._id\">\n                                                  {{ singleInscription.name }}\n                                                </mat-option>\n                                              </mat-select>\n                                        </mat-form-field>\n                                        <mat-form-field class=\"example-full-width col-md-2\">\n                                            <input [(ngModel)]=\"inscription.inscriptionNumber\" name=\"inscriptionType_{{ inscription_id +i}}\" matInput placeholder=\"Number\" type=\"number\">\n                                        </mat-form-field>\n                                        <button mat-button *ngIf=\"inscriptionCollection.length != 1 \"type=\"button\" (click)=\"removeInscription(i)\">\n                                            <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">remove_circle_outline</mat-icon>\n                                        </button>\n                                        <button mat-button *ngIf=\"i == (inscriptionCollection.length - 1)\" type=\"button\" (click)=\"addInscription()\">\n                                            <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">add_circle_outline</mat-icon>\n                                        </button>\n                        \n                                </div>\n                                <div class=\"col-md-12\">\n                                    <h3 class=\"card-title\">Accessories</h3>\n                                </div>\n                                <div class=\"col-md-12\" *ngFor=\"let accessory of accessoriesCollection; let i = index;\" >\n                                    <mat-form-field class=\"example-full-width col-md-2\">\n                                        <mat-label>-- Select Type --</mat-label>\n                                          <mat-select [(ngModel)]=\"accessory.type\" name=\"accessoriesType_{{ accessories_id +i}}\" (selectionChange)=\"filterAccessories($event.value, i)\" >\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let type of accessoriesTypeList\" [value]=\"type\">\n                                              {{ type }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                    <mat-form-field class=\"example-full-width col-md-5\">\n                                            <mat-label>-- Select Accessories --</mat-label>\n                                              <mat-select [(ngModel)]=\"accessory.name\" name=\"accessoriesName_{{accessories_id+i}}\" (selectionChange)=\"filterAccessoriesSize($event.value, i)\" >\n                                                <mat-option>--</mat-option>\n                                                <mat-option *ngFor=\"let accessoryName of accessoriesNameCollection[i]\" [value]=\"accessoryName.name\">\n                                                  {{ accessoryName.displayName }}\n                                                </mat-option>\n                                              </mat-select>\n                                    </mat-form-field>\n                                    <mat-form-field class=\"example-full-width col-md-2\">\n                                            <mat-label>-- Select Size --</mat-label>\n                                              <mat-select [(ngModel)]=\"accessory.size\" name=\"accessoriesSize_{{accessories_id+i}}\" >\n                                                <mat-option>--</mat-option>\n                                                <mat-option *ngFor=\"let accessoriesSize of accessoriesSizeCollection[i]\" [value]=\"accessoriesSize._id\">\n                                                  {{ accessoriesSize.size }}\n                                                </mat-option>\n                                              </mat-select>\n                                    </mat-form-field>\n                                    <mat-form-field class=\"example-full-width col-md-2\">\n                                        <input [(ngModel)]=\"accessory.number\" name=\"accessoriesNumber_{{ accessories_id +i}}\" matInput placeholder=\"Quantity\" type=\"number\" min=\"0\">\n                                    </mat-form-field>\n                                    \n                                    <button mat-button *ngIf=\"accessoriesCollection.length!= 1\" type=\"button\" (click)=\"removeAccessories(i)\">\n                                        <mat-icon class=\"material-icons color_red\" aria-hidden=\"false\" aria-label=\"Example home icon\">remove_circle_outline</mat-icon>\n                                    </button>\n                                    <button mat-button *ngIf=\"i == (accessoriesCollection.length-1)\" type=\"button\" (click)=\"addAccessories()\">\n                                        <mat-icon class=\"material-icons color_green\" aria-hidden=\"false\" aria-label=\"Example home icon\">add_circle_outline</mat-icon>\n                                    </button>\n                                </div>\n                                \n                                <div class=\"col-md-6\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input #advertisement=\"ngModel\" [(ngModel)]=\"currentQuote.advertisement\" name=\"advertisement\" matInput placeholder=\"How did you find us\" required>\n                                  </mat-form-field>\n                              </div>\n              \n                              <div class=\"col-md-2\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input #extraFee=\"ngModel\" [(ngModel)]=\"currentQuote.extraFee\" name=\"extraFee\" matInput placeholder=\"Extra Fee\" type=\"number\" min=\"0\">\n                                  </mat-form-field>\n                              </div>\n                              <div class=\"col-md-2\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input #permitFee=\"ngModel\" [(ngModel)]=\"currentQuote.permitFee\" name=\"permitFee\" matInput placeholder=\"Permit Fee\" type=\"number\" min=\"0\">\n                                  </mat-form-field>\n                              </div>\n                              <div class=\"col-md-2\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input #discount=\"ngModel\" [(ngModel)]=\"currentQuote.discount\" name=\"discount\" matInput placeholder=\"Discount %\" max=\"10\" min=\"0\" required>\n                                </mat-form-field>\n                              </div>\n                                \n                                <div class=\"col-md-12\">\n                                  <mat-form-field class=\"example-full-width\">\n                                      <textarea #note=\"ngModel\" [(ngModel)]=\"currentQuote.note\" name=\"note\" matInput placeholder=\"Note\"></textarea>\n                                </mat-form-field>\n                          </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger\" style=\"float: right;\" [disabled]=\"f.invalid\">Create Monument</button>\n                            <!-- <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Monument</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteMonument()\">Delete Monument</button>\n                             -->\n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient ) {}\n\n  login(credentials){\n    return this.http.post('/api/v1/users/login',credentials)\n    .pipe(\n      map((res)=>{\n        if(res && res['token']){\n          //console.log(res['token']);\n          localStorage.setItem('token', res['token']);\n          return true;\n        }\n        console.log(res);\n        return false;\n      }\n\n      )\n    );\n  }\n\n  logout(){\n    localStorage.removeItem('token')\n  }\n\n  isLoggedIn(){\n    let jwtHelper = new JwtHelperService();\n    let token = localStorage.getItem('token');\n    if(!token){\n      return false;\n    }\n    let expirationDate = jwtHelper.getTokenExpirationDate(token);\n    let isExpired = jwtHelper.isTokenExpired(token);\n\n    //console.log(expirationDate);\n    //console.log(isExpired);\n\n    return !isExpired;\n  }\n\n  get currentUser(){\n    let token = localStorage.getItem('token');\n    if(!token) return null;\n\n    let jwtHelper = new JwtHelperService();\n    let userInfo = jwtHelper.decodeToken(token)\n    //console.log(userInfo);\n    if(userInfo[\"role\"] == \"admin\")\n      return true;\n  }\n\n  currentUserId(){\n    let token = localStorage.getItem('token');\n    if(!token) return null;\n    let jwtHelper = new JwtHelperService();\n    let userInfo = jwtHelper.decodeToken(token)\n\n    return userInfo[\"id\"];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n  };\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdditionalInscriptionServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllInscriptions(){\n \n    return this.http.get(\"/api/v1/additionalInscription/\", httpOptions);\n  }\n\n  getInscription(inscriptionId){\n    return this.http.get(\"/api/v1/additionalInscription/\" + inscriptionId, httpOptions);\n  }\n\n  createInscription(newInscription){\n    return this.http.post(\"/api/v1/additionalInscription/\", newInscription, httpOptions);\n  }\n\n  updateInscription(inscriptionId, newInscription){\n    return this.http.patch(\"/api/v1/additionalInscription/\" + inscriptionId, newInscription, httpOptions)\n  }\n\n  deleteInscription(inscriptionId){\n    return this.http.delete(\"/api/v1/additionalInscription/\" + inscriptionId, httpOptions)\n  }\n  getInscriptionByOther(params){\n    return this.http.get(\"/api/v1/additionalInscription/\" + params, httpOptions )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n};\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessoriesService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllAccessoriess(){\n \n    return this.http.get(\"/api/v1/accessories/\", httpOptions);\n  }\n\n  getAccessories(accessoriesId){\n    return this.http.get(\"/api/v1/accessories/\" + accessoriesId, httpOptions);\n  }\n\n  createAccessories(newAccessories){\n    return this.http.post(\"/api/v1/accessories/\", newAccessories, httpOptions);\n  }\n\n  updateAccessories(accessoriesId, newAccessories){\n    return this.http.patch(\"/api/v1/accessories/\" + accessoriesId, newAccessories, httpOptions)\n  }\n\n  deleteAccessories(accessoriesId){\n    return this.http.delete(\"/api/v1/accessories/\" + accessoriesId, httpOptions)\n  }\n\n  getAccessoriesByOther(params){\n    return this.http.get(\"/api/v1/accessories/\" + params, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { UsersService } from '../services/users.service';\n\nexport interface UserData{\n  name: string;\n  email: string;\n  role: string;\n};\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'email', 'role', 'edit/resetPassword'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private usersService: UsersService) { \n    const users = this.usersService.getAllUsers().subscribe((result)=>{\n        console.log(result[\"data\"][\"users\"])\n        this.dataSource = new MatTableDataSource(result[\"data\"][\"users\"])\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    });\n  }\n\n  \n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Users Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/user-profile/']\">New User</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name email or role type\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- ID Column -->\n                              <ng-container matColumnDef=\"name\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                              </ng-container>\n                          \n                              <!-- Progress Column -->\n                              <ng-container matColumnDef=\"email\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n                              </ng-container>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"role\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Role </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.role}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit/resetPassword\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit/ResetPassword </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/user-profile/', row._id]\"  >Edit</button>\n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/resetpassword/', row._id]\"  >Reset Password</button>\n                                </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n  };\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoundationService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllFoundations(){\n \n    return this.http.get(\"/api/v1/foundation/\", httpOptions);\n  }\n\n  getFoundation(foundationId){\n    return this.http.get(\"/api/v1/foundation/\" + foundationId, httpOptions);\n  }\n\n  createFoundation(newFoundation){\n    return this.http.post(\"/api/v1/foundation/\", newFoundation, httpOptions);\n  }\n\n  updateFoundation(foundationId, newFoundation){\n    return this.http.patch(\"/api/v1/foundation/\" + foundationId, newFoundation, httpOptions)\n  }\n\n  deleteFoundation(foundationId){\n    return this.http.delete(\"/api/v1/foundation/\" + foundationId, httpOptions)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InscriptionQuoteService } from '../../services/inscription-quote.service'\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from 'html2canvas';\n\n@Component({\n  selector: 'app-inscription-quote-detail',\n  templateUrl: './inscription-quote-detail.component.html',\n  styleUrls: ['./inscription-quote-detail.component.css']\n})\nexport class InscriptionQuoteDetailComponent implements OnInit {\n\n  id;\n  currentQuote={};\n  constructor(private quoteService: InscriptionQuoteService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n      this.quoteService.getInscriptionQuote(this.id).subscribe(result=>{\n        this.currentQuote = result['data'];\n        console.log(this.currentQuote);\n      })\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  exportAsPDF(){\n    let data = document.getElementById(\"download_id\");  \n    console.log(data)\n    html2canvas(data).then(canvas => {\n      const contentDataURL = canvas.toDataURL('image/png') \n      console.log(contentDataURL) \n      let pdf = new jsPDF('p', 'cm', 'a4'); //Generates  PDF in portrait mode\n      var width = pdf.internal.pageSize.getWidth();\n      var height = pdf.internal.pageSize.getHeight();\n      pdf.addImage(contentDataURL, 'PNG', 0, 0, width, height*0.9);  \n      pdf.save('Quote_' + this.currentQuote['quote']['name'] +'.pdf');   \n    }); \n  }\n\n}","<!-- <div class=\"downloadbutton\">\n    <button mat-raised-button color=\"primary\" (click)=\"exportAsPDF();\"><mat-icon>get_app</mat-icon> Download</button>\n</div> -->\n<div id=\"download_id\" class=\"invoice-box\">\n        <table cellpadding=\"0\" cellspacing=\"0\">\n            <tr class=\"top\">\n                <td colspan=\"2\">\n                    <table>\n                        <tr>\n                            <td class=\"title\">\n                                <img src=\"/assets/images/StonemartLogoLoRes.png\" style=\"width:100%; max-width:300px;\">\n                            </td>\n    \n                            <td>\n                                <strong> Stonemart Memorial<br>\n                                310 Mahoneys Road Thomastown Vic 3074<br>\n                                1300 696 896</strong>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr class=\"information\">\n                <td colspan=\"2\">\n                    <table>\n                        <tr>\n                            <td>\n                                <br>\n                                <strong>Customer Name:</strong> {{currentQuote['quote']['name']}}<br>\n                                <strong>Customer Phone:</strong> {{currentQuote['quote'].phone}}<br>\n                                <strong *ngIf=\"currentQuote['quote']['cemetery']\">Cemetary:</strong> {{currentQuote['quote'].cemetery? currentQuote['quote'].cemetery +' ' : \"\"}} <strong *ngIf=\"currentQuote['quote']['section']\">Section:</strong> {{currentQuote['quote'].section? currentQuote['quote'].section : \"\"}}\n                                <br><strong *ngIf=\"currentQuote['quote']['row']\">Row:</strong> {{currentQuote['quote']['row']? currentQuote['quote'].row +' ' : \"\"}} <strong *ngIf=\"currentQuote['quote']['grave_no']\">Grave No :</strong> {{currentQuote['quote']['grave_no']? currentQuote['quote'].grave_no : \"\"}}\n                                <br><strong *ngIf=\"currentQuote['quote']['funeralProvider']\">Funeral Provider:</strong> {{currentQuote['quote']['funeralProvider']? currentQuote['quote']['funeralProvider']: \"\"}}<br>\n                                \n                            </td>\n    \n                            <td>\n                                <br>\n                                <strong *ngIf=\"currentQuote['quote']['monumentStyle']\">Style:</strong> {{currentQuote['quote']['monumentStyle']? currentQuote['quote']['monumentStyle'] : \"\"}}<br *ngIf=\"currentQuote['quote']['monumentStyle']\">\n                                <strong *ngIf=\"currentQuote['quote']['advertisement']\">How to Find Us:</strong> {{currentQuote['quote']['advertisement']? currentQuote['quote']['advertisement']: \"\"}}<br *ngIf=\"currentQuote['quote']['advertisement']\"> \n                                <strong>Staff:</strong> {{currentQuote['quote']['staff'].name}}<br>\n                                <strong>Created:</strong> {{currentQuote['quote'].modifiedDate.substring(0,10)}}\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"currentQuote['quote'].inscription.length>0\" class=\"heading\">\n                    <td>\n                        Inscription On Site\n                    </td>\n                    <td>\n                        Quantity\n                    </td>\n            </tr>\n            <ng-container *ngIf=\"currentQuote['quote'].inscription.length>0\">\n                    <tr class=\"item\" *ngFor=\"let inscrip of currentQuote['quote'].inscription\">\n                        <td>\n                            {{inscrip.inscriptionId.name}}\n                        </td>\n            \n                        <td>\n                            {{inscrip.inscriptionNumber}}\n                        </td>\n                    </tr>\n            </ng-container>\n    \n      \n            <tr *ngIf=\"currentQuote['quote'].extraFee || currentQuote['quote'].permitFee\" class=\"heading\">\n                <td>\n                    Extra Fee/Permit Fee\n                </td>\n                <td>\n                    Price\n                </td>\n            </tr>\n            <tr *ngIf=\"currentQuote['quote'].extraFee\" class=\"details\">\n                <td>\n                    Extra Fee\n                </td>\n                <td>\n                    {{currentQuote.quote.extraFee}}\n                </td>\n            </tr>\n            <tr *ngIf=\"currentQuote['quote'].permitFee\" class=\"details\">\n                    <td>\n                        Permit Fee\n                    </td>\n                    <td>\n                        {{currentQuote.quote.permitFee}}\n                    </td>\n                </tr>\n            <tr class=\"total\">\n                <td></td>\n    \n                <td>\n                    Total: ${{currentQuote[\"totalPrice\"]}}\n                </td>\n            </tr>\n        </table>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { AdditionalInscriptionServiceService } from '../../services/additional-inscription-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-additional-inscription-profile',\n  templateUrl: './additional-inscription-profile.component.html',\n  styleUrls: ['./additional-inscription-profile.component.css']\n})\nexport class AdditionalInscriptionProfileComponent implements OnInit {\n\n  currentInscription =  {name:\"\",type:\"\",price:0};\n  id;\n\n  constructor(private inscriptionService: AdditionalInscriptionServiceService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.inscriptionService.getInscription(this.id).subscribe(result=>{\n         console.log(result['data']['inscription']);\n          this.currentInscription =result['data']['inscription'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newInscription){\n    if(this.id) {\n      this.inscriptionService.updateInscription(this.id,newInscription).subscribe(result=>{\n        this.router.navigate(['/additionalInscriptionslist'])\n      });\n    }\n    else{\n        this.inscriptionService.createInscription(newInscription).subscribe(result=>{\n          this.router.navigate(['/additionalInscriptionslist'])\n    });\n      \n    }\n  }\n\n  deleteInscription(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.inscriptionService.deleteInscription(this.id).subscribe(result=>{\n        this.router.navigate(['/additionalInscriptionslist'])\n      });\n    }\n    return\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Inscription</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentInscription.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #type=\"ngModel\" [(ngModel)]=\"currentInscription.type\" name=\"type\" matInput placeholder=\"Type\">\n                                    </mat-form-field>\n                                </div>\n             \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #price=\"ngModel\" [(ngModel)]=\"currentInscription.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                        Price is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Inscription</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Inscription</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteInscription()\">Delete Inscription</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n  };\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InscriptionService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllInscriptions(){\n \n    return this.http.get(\"/api/v1/inscription/\", httpOptions);\n  }\n\n  getInscription(inscriptionId){\n    return this.http.get(\"/api/v1/inscription/\" + inscriptionId, httpOptions);\n  }\n\n  createInscription(newInscription){\n    return this.http.post(\"/api/v1/inscription/\", newInscription, httpOptions);\n  }\n\n  updateInscription(inscriptionId, newInscription){\n    return this.http.patch(\"/api/v1/inscription/\" + inscriptionId, newInscription, httpOptions)\n  }\n\n  deleteInscription(inscriptionId){\n    return this.http.delete(\"/api/v1/inscription/\" + inscriptionId, httpOptions)\n  }\n  getInscriptionByOther(params){\n    return this.http.get(\"/api/v1/inscription/\" + params, httpOptions )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n    headers: new HttpHeaders({\"authorization\": 'Bearer '+ token, \"Content-Type\": \"application/json\" }),\n  };\n  \n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuoteService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllQuotes(){\n    let token = localStorage.getItem('token');\n    const httpOptions1 = {\n      headers: new HttpHeaders({\"authorization\": 'Bearer '+ token, \"Content-Type\": \"application/json\" }),\n    };\n    return this.http.get(\"/api/v1/quote/\", httpOptions1);\n  }\n\n  getQuote(quoteId){\n    return this.http.get(\"/api/v1/quote/\" + quoteId, httpOptions);\n  }\n\n  createQuote(newQuote){\n    return this.http.post(\"/api/v1/quote/\", newQuote, httpOptions);\n  }\n\n  updateStatus(id, newStatus){\n    return this.http.patch(\"/api/v1/quote/\"+ id,newStatus, httpOptions );\n  }\n\n  checkPhone(phoneNUmber){\n    return this.http.get(\"/api/v1/quote/checkphone/\" + phoneNUmber, httpOptions)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AccessoriesService } from '../../services/accessories.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-accessories-profile',\n  templateUrl: './accessories-profile.component.html',\n  styleUrls: ['./accessories-profile.component.css']\n})\nexport class AccessoriesProfileComponent implements OnInit {\n  currentAccessories =  {name:\"\",description:\"\",accessoriesType:\"\",size:\"\",price:0};\n  id;\n  accessoriesType = ['accessories', 'door', 'photo'];\n\n  constructor(private accessoriesService: AccessoriesService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.accessoriesService.getAccessories(this.id).subscribe(result=>{\n         console.log(result['data']['accessories']);\n          this.currentAccessories =result['data']['accessories'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newAccessories){\n    if(this.id) {\n      this.accessoriesService.updateAccessories(this.id,newAccessories).subscribe(result=>{\n        this.router.navigate(['/accessorieslist'])\n      });\n    }\n    else{\n        this.accessoriesService.createAccessories(newAccessories).subscribe(result=>{\n          this.router.navigate(['/accessorieslist'])\n    });\n      \n    }\n  }\n\n  deleteAccessories(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.accessoriesService.deleteAccessories(this.id).subscribe(result=>{\n        this.router.navigate(['/accessorieslist'])\n      });\n    }\n    return\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Accessories</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentAccessories.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Type --</mat-label>\n                                          <mat-select [(ngModel)]=\"currentAccessories.accessoriesType\" name=\"accessoriesType\" required>\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let type of accessoriesType\" [value]=\"type\">\n                                              {{ type }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n\n                                \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #size=\"ngModel\" [(ngModel)]=\"currentAccessories.size\" name=\"size\" matInput placeholder=\"size\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"size.touched && size.invalid && size.errors.required\">\n                                        Size is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentAccessories.description\" name=\"description\" matInput placeholder=\"description\">\n                                    </mat-form-field>\n                                </div>\n             \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #price=\"ngModel\" [(ngModel)]=\"currentAccessories.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                        Price is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Accessories</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Accessories</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteAccessories()\">Delete Accessories</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { InstallationService } from '../../services/installation.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-installation-profile',\n  templateUrl: './installation-profile.component.html',\n  styleUrls: ['./installation-profile.component.css']\n})\nexport class InstallationProfileComponent implements OnInit {\n\n  types: string[] = ['Lawn', 'Single', 'Double', 'Additional Charge', 'Delivery', 'Other'];\n  currentInstallation =  {name:\"\",monumentType:\"\",price:0};\n  id;\n\n  constructor(private installationService: InstallationService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.installationService.getInstallation(this.id).subscribe(result=>{\n         //console.log(result['data']['installation']);\n          this.currentInstallation =result['data']['installation'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newInstallation){\n    if(this.id) {\n      this.installationService.updateInstallation(this.id,newInstallation).subscribe(result=>{\n        this.router.navigate(['/installationslist'])\n      });\n    }\n    else{\n        this.installationService.createInstallation(newInstallation).subscribe(result=>{\n          this.router.navigate(['/installationslist'])\n    });\n      \n    }\n  }\n\n  deleteInstallation(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.installationService.deleteInstallation(this.id).subscribe(result=>{\n        this.router.navigate(['/installationslist'])\n      });\n    }\n    return\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Installation</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentInstallation.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <mat-label>-- Select Type --</mat-label>\n                                          <mat-select [(ngModel)]=\"currentInstallation.monumentType\" name=\"monumentType\" required>\n                                            <mat-option>--</mat-option>\n                                            <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                                              {{ type }}\n                                            </mat-option>\n                                          </mat-select>\n                                    </mat-form-field>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #price=\"ngModel\" [(ngModel)]=\"currentInstallation.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                        Price is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Installation</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Installation</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteInstallation()\">Delete Installation</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nopermission',\n  templateUrl: './nopermission.component.html',\n  styleUrls: ['./nopermission.component.css']\n})\nexport class NopermissionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>You are not allowed to access the website, please contact website admin</h1>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AuthService } from './../services/auth.service';\nimport { Component } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  invalidLogin: boolean; \n\n  constructor(\n    private router: Router, \n    private authService: AuthService) { }\n\n  signIn(credentials) {\n    this.authService.login(credentials)\n      .subscribe(result => { \n        if (result)\n          this.router.navigate(['/']);\n        else  \n          this.invalidLogin = true; \n      },error=>{\n        console.log(error)\n          this.invalidLogin = true; \n      }\n      );\n  }\n}\n","<form class=\"form-signin\" #f=\"ngForm\" (ngSubmit)=\"signIn(f.value)\">\n    <h2 class=\"form-signin-heading\">Please sign in</h2>\n    <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username and/or password.</div>\n    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n    <input type=\"email\" id=\"inputEmail\" name=\"email\" ngModel class=\"form-control\" placeholder=\"Email address\" required autofocus>\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" required>\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n    headers: new HttpHeaders({\"authorization\": 'Bearer '+ token, \"Content-Type\": \"application/json\" }),\n  };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InscriptionQuoteService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllInscriptionQuotes(){\n    let token = localStorage.getItem('token');\n    const httpOptions1 = {\n      headers: new HttpHeaders({\"authorization\": 'Bearer '+ token, \"Content-Type\": \"application/json\" }),\n    };\n    return this.http.get(\"/api/v1/inscriptionQuote/\", httpOptions1);\n  }\n\n  getInscriptionQuote(inscriptionQuoteId){\n    return this.http.get(\"/api/v1/inscriptionQuote/\" + inscriptionQuoteId, httpOptions);\n  }\n\n  createInscriptionQuote(newInscriptionQuote){\n    return this.http.post(\"/api/v1/inscriptionQuote/\", newInscriptionQuote, httpOptions);\n  }\n\n  updateStatus(id, newStatus){\n    return this.http.patch(\"/api/v1/inscriptionQuote/\"+ id,newStatus, httpOptions );\n  }\n\n  checkPhone(phoneNUmber){\n    return this.http.get(\"/api/v1/inscriptionQuote/checkphone/\" + phoneNUmber, httpOptions)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FoundationService } from '../../services/foundation.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-foundation-profile',\n  templateUrl: './foundation-profile.component.html',\n  styleUrls: ['./foundation-profile.component.css']\n})\nexport class FoundationProfileComponent implements OnInit {\n  currentFoundation =  {name:\"\",description:\"\",price:0};\n  id;\n\n  constructor(private foundationService: FoundationService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if(this.id) {\n       this.foundationService.getFoundation(this.id).subscribe(result=>{\n         console.log(result['data']['foundation']);\n          this.currentFoundation =result['data']['foundation'];\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(newFoundation){\n    if(this.id) {\n      this.foundationService.updateFoundation(this.id,newFoundation).subscribe(result=>{\n        this.router.navigate(['/foundationslist'])\n      });\n    }\n    else{\n        this.foundationService.createFoundation(newFoundation).subscribe(result=>{\n          this.router.navigate(['/foundationslist'])\n    });\n      \n    }\n  }\n\n  deleteFoundation(){\n    if(confirm('Are you sure you want to delete this product?')){\n      this.foundationService.deleteFoundation(this.id).subscribe(result=>{\n        this.router.navigate(['/foundationslist'])\n      });\n    }\n    return\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Foundation</h4>\n                    </div>\n                    \n                    <div class=\"card-body\">\n                        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentFoundation.name\" name=\"name\" matInput placeholder=\"Name\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"name.touched && name.invalid && name.errors.required\">\n                                        Name is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n\n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #name=\"ngModel\" [(ngModel)]=\"currentFoundation.description\" name=\"description\" matInput placeholder=\"description\">\n                                    </mat-form-field>\n                                </div>\n             \n                                <div class=\"col-md-8\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input #price=\"ngModel\" [(ngModel)]=\"currentFoundation.price\" name=\"price\" matInput placeholder=\"Price\" type=\"number\" required>\n                                    </mat-form-field>\n                                    <mat-error *ngIf=\"price.touched && price.invalid && price.errors.required\">\n                                        Price is <strong>required</strong>\n                                    </mat-error>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"!id\" [disabled]=\"f.invalid\">Create Foundation</button>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" *ngIf=\"id\" [disabled]=\"f.invalid\">Update Foundation</button>\n                            <button mat-raised-button type=\"button\" class=\"btn btn-dark pull-left\" *ngIf=\"id\" (click)=\"deleteFoundation()\">Delete Foundation</button>\n                            \n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nlet token = localStorage.getItem('token');\nconst httpOptions = {\n  headers: new HttpHeaders({\"authorization\": 'Bearer '+token, \"Content-Type\": \"application/json\" }),\n  };\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CastingService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllCastings(){\n \n    return this.http.get(\"/api/v1/casting/\", httpOptions);\n  }\n\n  getCasting(castingId){\n    return this.http.get(\"/api/v1/casting/\" + castingId, httpOptions);\n  }\n\n  createCasting(newCasting){\n    return this.http.post(\"/api/v1/casting/\", newCasting, httpOptions);\n  }\n\n  updateCasting(castingId, newCasting){\n    return this.http.patch(\"/api/v1/casting/\" + castingId, newCasting, httpOptions)\n  }\n\n  deleteCasting(castingId){\n    return this.http.delete(\"/api/v1/casting/\" + castingId, httpOptions)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { AccessoriesService } from '../../services/accessories.service';\n\n\nexport interface AccessoriesData{\n  name: string;\n  description: string;\n  accessoriesType:string;\n  size: string;\n  price:number\n};\n\n@Component({\n  selector: 'app-accessories',\n  templateUrl: './accessories.component.html',\n  styleUrls: ['./accessories.component.css']\n})\nexport class AccessoriesComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'description', 'accessoriesType', 'size', 'price', 'edit'];\n  dataSource: MatTableDataSource<AccessoriesData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private accessoriesService: AccessoriesService) {\n    this.accessoriesService.getAllAccessoriess().subscribe((result)=>{\n      console.log(result);\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"accessories\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Accessories Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/accessories-profile/']\">New Accessories</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name type\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"name\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                              </ng-container>\n                          \n                              <!-- Description Column -->\n                              <ng-container matColumnDef=\"description\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\n                              </ng-container>\n\n                               <!-- Description Column -->\n                               <ng-container matColumnDef=\"accessoriesType\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.accessoriesType}} </td>\n                              </ng-container>\n\n                              <!-- Size Column -->\n                              <ng-container matColumnDef=\"size\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Size </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.size}} </td>\n                              </ng-container>\n\n                              <!-- Price Column -->\n                              <ng-container matColumnDef=\"price\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                                <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/accessories-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ViewChild } from '@angular/core'\nimport { AdditionalInscriptionServiceService } from '../../services/additional-inscription-service.service';\n\n@Component({\n  selector: 'app-additional-inscription',\n  templateUrl: './additional-inscription.component.html',\n  styleUrls: ['./additional-inscription.component.css']\n})\nexport class AdditionalInscriptionComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'type', 'price', 'edit'];\n  dataSource: MatTableDataSource<AdditionalInscriptionServiceService>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private inscriptionService: AdditionalInscriptionServiceService) {\n    this.inscriptionService.getAllInscriptions().subscribe((result)=>{\n      console.log(result);\n      this.dataSource = new MatTableDataSource(result[\"data\"][\"inscription\"])\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n  });\n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h2 class=\"card-title\">Inscription Management</h2>\n                        <!-- <p class=\"card-category col-md-4\">Edit user profile</p> -->\n                        <button mat-raised-button color=\"warn\" [routerLink]=\"['/additionalInscription-profile/']\">New Inscription</button>      \n                    </div>\n                    <div class=\"card-body\">\n                        <mat-form-field>\n                            <mat-label>Filter</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"You can input name type\" #input>\n                          </mat-form-field>\n                          \n                          <div class=\"mat-elevation-8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                          \n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"name\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                              </ng-container>\n                          \n                              <!-- Type Column -->\n                              <ng-container matColumnDef=\"type\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.type}} </td>\n                              </ng-container>\n\n                              <!-- Price Column -->\n                              <ng-container matColumnDef=\"price\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                                <td mat-cell *matCellDef=\"let row\"> ${{row.price}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    <button id=\"editButton\" mat-raised-button color=\"warn\" [routerLink]=\"['/additionalInscription-profile/', row._id]\">Edit</button>\n                                   </td>\n                              </ng-container>\n\n                          \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          \n                              <!-- Row shown when there is no matching data. -->\n                              <tr class=\"mat-row\" *matNoDataRow>\n                                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                              </tr>\n                            </table>\n                          \n                            <mat-paginator [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\n                          </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n  </div>\n  ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}